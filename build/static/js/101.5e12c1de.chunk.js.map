{"version":3,"file":"static/js/101.5e12c1de.chunk.js","mappings":"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","sources":["components/InvestorComponents/InvestorGroup/index.js","components/Modals/InsideGroupModal.js","components/Modals/LeaveGroup.js","components/ProgressBar/index.js","components/Select/index.js","components/UserChart/UserLine.js","components/UserChart/UserBar.js","components/UserChart/UserPie.js","components/InvestorComponents/CloseGroup/index.js","components/Modals/CloseGroupModal.js","pages/User/UserFirstTab.js","pages/User/UserSecondTab.js","pages/User/UserThirtTab.js","assets/img/star.svg","assets/img/starBorder.svg","components/Modals/EstimateModal.js","pages/User/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport CardInfo from \"@components/CardInfo\";\r\nimport Button from \"@components/Button\";\r\nimport ProgressBar from \"@components/ProgressBar\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../../utils/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { joinToGroup, leaveFromGroup } from \"../../../store/group/group.api\";\r\nimport SpinnerLoad from \"../../SpinnerLoad\";\r\nimport LeaveGroup from \"../../Modals/LeaveGroup\";\r\n\r\nconst InvestorGroup = ({ e, clean_group, setgroupid, className }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [readMore, setReadMore] = useState(true);\r\n    const [leaveToggle, setLeaveToggle] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        navigate(`${router.profile}/${e?.trader}`);\r\n    };\r\n\r\n    const leave = (toggle) => {\r\n        if (e.status_for_user && toggle) {\r\n            dispatch(leaveFromGroup(e?.id));\r\n        }\r\n    };\r\n\r\n    return e ? (\r\n        <CardInfo\r\n            className={`${className}`}\r\n            name={`${e.first_name} ${e.last_name}`}\r\n            email={e.email}\r\n            rating={e.rating}\r\n            onClick={handleClick}\r\n            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n        >\r\n            <div className={`${className}__title`}>\r\n                <span>{e.title}</span>\r\n            </div>\r\n            <div className={`${className}__desc ${readMore && \"active\"}`}>\r\n                <p>{e.description}</p>\r\n            </div>\r\n            {e?.description?.split(\"\").length > 100 ? (\r\n                <Button onClick={() => setReadMore(!readMore)}>\r\n                    ПОКАЗАТЬ ВСЕ\r\n                </Button>\r\n            ) : null}\r\n            <div className={`${className}__linebar`}>\r\n                <ProgressBar\r\n                    completed={(e.amount_collected / e.need_sum) * 100}\r\n                    from={e.amount_collected}\r\n                    to={e.need_sum}\r\n                    start={e.start_date}\r\n                    end={e.end_date}\r\n                />\r\n            </div>\r\n            <Button\r\n                onClick={() => {\r\n                    if (e.status_for_user) {\r\n                        setLeaveToggle(true);\r\n                    } else {\r\n                        if (e.status === \"recruited\") {\r\n                            setgroupid(e.id);\r\n                        }\r\n                    }\r\n                }}\r\n                disabled={e.status === \"end\"}\r\n                theme={\r\n                    !e.status_for_user\r\n                        ? e.status === \"recruited\"\r\n                            ? \"beforesubmit\"\r\n                            : e.status === \"was\"\r\n                            ? \"aftersubmit\"\r\n                            : e.status === \"end\"\r\n                            ? \"disabled\"\r\n                            : \"\"\r\n                        : \"aftersubmit\"\r\n                }\r\n            >\r\n                {!e.status_for_user\r\n                    ? e.status === \"recruited\"\r\n                        ? \"Вступить в группу\"\r\n                        : e.status === \"was\"\r\n                        ? \"Выйти из группы\"\r\n                        : e.status === \"end\"\r\n                        ? \"Группа старотовала\"\r\n                        : \"\"\r\n                    : \"Выйти из группы\"}\r\n            </Button>\r\n\r\n            {leaveToggle ? <LeaveGroup handleChange={leave} /> : null}\r\n        </CardInfo>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default InvestorGroup;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\nimport ProgressBar from \"@components/ProgressBar\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGroupInfo, joinToGroup } from \"../../store/group/group.api\";\r\nimport SpinnerLoad from \"../SpinnerLoad\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\n\r\nconst InsideGroupModal = ({ handleChange, info }) => {\r\n    const [sum, setSum] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { group, load } = useSelector((state) => state.group);\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            console.log(toggle);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (info) {\r\n            dispatch(getGroupInfo(info));\r\n        }\r\n    }, [info]);\r\n\r\n    const rangeChange = (length) => {\r\n        setSum(length);\r\n    };\r\n\r\n    const join = (id) => {\r\n        if (isAuth) {\r\n            dispatch(joinToGroup(id, sum));\r\n        } else {\r\n            navigate(router.login);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                {group ? (\r\n                    <>\r\n                        <div className=\"modal__block__title\">\r\n                            <span>{group.title}</span>\r\n                        </div>\r\n                        <div className=\"modal__block__desc opacity\">\r\n                            <span>{group.description}</span>\r\n                        </div>\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <CardInfo\r\n                            id={group.id}\r\n                            className=\"modal__block__profit\"\r\n                            name={`${group.first_name} ${group.last_name}`}\r\n                            email={group.email}\r\n                            rating={`${group.investors.length}/${group.group_size}`}\r\n                            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                        />\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <span className=\"w400 f12\">120 дней</span>\r\n                        <ProgressBar\r\n                            completed={\r\n                                (group.amount_collected / group.need_sum) * 100\r\n                            }\r\n                            from={group.amount_collected}\r\n                            to={group.need_sum}\r\n                            start={group.start_date}\r\n                            end={group.end_date}\r\n                        />\r\n                        <span className=\"w700 f12\">ВАША СУММА ВСТУПЛЕНИЯ</span>\r\n                        <RangeSlider\r\n                            min={group?.min_entry_sum}\r\n                            max={group?.max_entry_sum}\r\n                            onChange={(e) => rangeChange(e)}\r\n                        />\r\n                        <div className=\"modal__block__confirm\">\r\n                            <Checkbox\r\n                                id={info}\r\n                                onClick={() => console.log(\"confirm\")}\r\n                                label=\"Я принимаю условия\"\r\n                            />\r\n                            <span>\r\n                                <a href=\"#\">соглашения</a>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"modal__block__btns\">\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme=\"aftersubmit\"\r\n                                onClick={() => hadnleClick(false)}\r\n                            >\r\n                                Отмена\r\n                            </Button>\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme={\r\n                                    group.status === \"recruited\"\r\n                                        ? \"beforesubmit\"\r\n                                        : \"aftersubmit\"\r\n                                }\r\n                                onClick={() => {\r\n                                    join(group.id);\r\n                                    hadnleClick(true);\r\n                                }}\r\n                            >\r\n                                {load ? (\r\n                                    <SpinnerLoad />\r\n                                ) : group.status === \"recruited\" ? (\r\n                                    \"Вступить\"\r\n                                ) : (\r\n                                    \"Выйти из группы\"\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <SpinnerLoad />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InsideGroupModal;\r\n","import React from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Field from \"@components/Field\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst LeaveGroup = ({ handleChange, info }) => {\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Выйти из группы ?</span>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"danger\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Выйти\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отменить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaveGroup;\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./ProgressBar.scss\";\r\n\r\n//Utils\r\nimport { numberWithSpaces, dateFormatter } from \"@utils/stringHelper\";\r\n\r\nconst ProgressBar = ({ completed, from, to, start, end }) => {\r\n    const styles = {\r\n        backgroundColor: \"#61CB58\",\r\n        height: \"4px\",\r\n        width: `${completed}%`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"progressbar\">\r\n            <div className=\"progressbar__from_to\">\r\n                <span>{from ? numberWithSpaces(from, \"$\") : 0}</span>\r\n                <span>{numberWithSpaces(to, \"$\")}</span>\r\n            </div>\r\n            <div className=\"progressbar__line\">\r\n                <div style={styles} />\r\n            </div>\r\n            {start && end ? (\r\n                <div className=\"progressbar__start_end\">\r\n                    <span>Начало: {dateFormatter(new Date(start))}</span>\r\n                    <span>Конец: {dateFormatter(new Date(end))}</span>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//Icons\r\nimport arrow from \"@assets/img/selectArrow.svg\";\r\n\r\n//Styles\r\nimport \"./Select.scss\";\r\n\r\nconst Select = ({ children, className, defaultOption, onChange }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [select, setSelect] = useState(defaultOption);\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n        if (e.target.localName === \"li\") {\r\n            setSelect(e.target.innerText);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        onChange && onChange(select);\r\n    }, [select]);\r\n\r\n    const toggleSelect = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={`select ${className}`} onClick={toggleSelect}>\r\n            <span>{select}</span>\r\n            {open && <ul className=\"select__list\">{children}</ul>}\r\n            <img src={arrow} alt=\"arrow\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\n\r\nconst CustomizedDot = (props) => {\r\n    const { cx, cy, value } = props;\r\n\r\n    return (\r\n        <svg\r\n            x={cx - 10}\r\n            y={cy - 10}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <circle\r\n                cx=\"16\"\r\n                cy=\"16\"\r\n                r=\"12\"\r\n                fill=\"#4F9BFF\"\r\n                stroke=\"white\"\r\n                stroke-width=\"8\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst UserLine = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const d = [];\r\n        for (let i = 0; i <= 15; i++) {\r\n            d.push({\r\n                name: `${i} name`,\r\n                ROI: Math.round(Math.random() * 100),\r\n            });\r\n        }\r\n        setData(d);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                <AreaChart\r\n                    width={500}\r\n                    height={400}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                    }}\r\n                >\r\n                    <defs>\r\n                        <linearGradient\r\n                            id=\"colorview\"\r\n                            x1=\"0\"\r\n                            y1=\"0\"\r\n                            x2=\"0\"\r\n                            y2=\"1\"\r\n                        >\r\n                            <stop\r\n                                offset=\"40%\"\r\n                                stopColor=\"#4F9BFF\"\r\n                                stopOpacity={1}\r\n                            />\r\n                            <stop\r\n                                offset=\"100%\"\r\n                                stopColor=\"#fff\"\r\n                                stopOpacity={0.2}\r\n                            />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <Tooltip cursor={false} />\r\n                    <XAxis dataKey=\"ROI\" />\r\n                    <YAxis padding={{ top: 20, bottom: 20 }} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Area\r\n                        type=\"monotone\"\r\n                        dataKey=\"ROI\"\r\n                        stroke=\"#4F9BFF\"\r\n                        strokeWidth={6}\r\n                        fill=\"url(#colorview)\"\r\n                        activeDot={<CustomizedDot />}\r\n                    />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserLine;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Bar,\r\n    BarChart,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\n\r\nconst CustomizedDot = (props) => {\r\n    const { cx, cy, value } = props;\r\n\r\n    return (\r\n        <svg\r\n            x={cx - 10}\r\n            y={cy - 10}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <circle\r\n                cx=\"16\"\r\n                cy=\"16\"\r\n                r=\"12\"\r\n                fill=\"#4F9BFF\"\r\n                stroke=\"white\"\r\n                stroke-width=\"8\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst UserBar = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const d = [];\r\n        for (let i = 0; i <= 4; i++) {\r\n            d.push({\r\n                name: `${i} name`,\r\n                ROI: Math.round(Math.random() * 100),\r\n                idx: i,\r\n            });\r\n        }\r\n        setData(d);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={2}>\r\n                <BarChart data={data} barSize={50}>\r\n                    <Tooltip cursor={false} />\r\n                    <XAxis\r\n                        dataKey=\"idx\"\r\n                        scale=\"band\"\r\n                        padding={{ left: 20, right: 20 }}\r\n                    />\r\n                    <YAxis dx={-10} padding={{ bottom: 10 }} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"ROI\" fill=\"#7BB7FF\" radius={8} />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\r\n\r\nconst COLORS = [\"#FFEA7B\", \"#7BB7FF\", \"#B57BFF\", \"#FF8042\"];\r\n\r\nconst UserPie = () => {\r\n    const [data, setData] = useState([\r\n        { name: \"Group A\", value: 400 },\r\n        { name: \"Group B\", value: 300 },\r\n        { name: \"Group C\", value: 300 },\r\n        { name: \"Group D\", value: 200 },\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={1}>\r\n                <PieChart width=\"100%\" data={data}>\r\n                    <Pie\r\n                        data={data}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        innerRadius={130}\r\n                        outerRadius={150}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                    >\r\n                        {data.map((entry, index) => (\r\n                            <Cell\r\n                                key={`cell-${index}`}\r\n                                fill={COLORS[index % COLORS.length]}\r\n                            />\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPie;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport CardInfo from \"@components/CardInfo\";\r\nimport Button from \"@components/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SpinnerLoad from \"../../SpinnerLoad\";\r\n\r\n//Styles\r\nimport \"./CloseGroup.scss\";\r\n\r\nconst CloseGroup = ({ e, clean_group, setgroupid, className }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [readMore, setReadMore] = useState(true);\r\n\r\n    return e ? (\r\n        <CardInfo\r\n            className={`${className} close_group`}\r\n            name={`${e.first_name} ${e.last_name}`}\r\n            email={e.email}\r\n            end={true}\r\n            rating={e.rating}\r\n            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n        >\r\n            <div\r\n                className={`main__group_content__card__title ${className}__title close_group__title`}\r\n            >\r\n                <span>{e.title}</span>\r\n            </div>\r\n            <div\r\n                className={`main__group_content__card__desc close_group__desc ${\r\n                    readMore && \"active\"\r\n                }`}\r\n            >\r\n                <p>{e.description}</p>\r\n            </div>\r\n            {e?.description?.split(\"\").length > 100 ? (\r\n                <Button onClick={() => setReadMore(!readMore)}>\r\n                    ПОКАЗАТЬ ВСЕ\r\n                </Button>\r\n            ) : null}\r\n            <Button onClick={() => setgroupid(e?.id)} theme={\"aftersubmit\"}>\r\n                Подробнее\r\n            </Button>\r\n        </CardInfo>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default CloseGroup;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\n\r\nexport const PareButton = () => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <Button\r\n            theme={active ? \"beforesubmit\" : \"aftersubmit\"}\r\n            onClick={() => setActive(!active)}\r\n        >\r\n            <img src={balance} alt=\"\" />\r\n            <span>USDTETH</span>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst CloseGroupModal = ({ handleChange, info }) => {\r\n    const [pareChange, setPareChange] = useState(0);\r\n    const navigate = useNavigate();\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            console.log(toggle);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Копирование трейдера</span>\r\n                </div>\r\n                <div className=\"modal__block__desc opacity\">\r\n                    <span>\r\n                        Вы можете выбрать пары и указать свою сумму, которую\r\n                        будете копировать.\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal__block__line\"></div>\r\n                <CardInfo\r\n                    className=\"modal__block__profit\"\r\n                    name={\"Богдан Богданов\"}\r\n                    email={\"danghoang87hl@gmail.com\"}\r\n                    rating={\"50/50\"}\r\n                    logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                />\r\n                <div className=\"modal__block__line\"></div>\r\n                <div className=\"modal__block__close_group\">\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Дата начала:</span>\r\n                        <p>15.08.2022</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Дата завершения:</span>\r\n                        <p>15.08.2022</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Сумма инвестированная:</span>\r\n                        <p>10 000 USDT</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Результат: </span>\r\n                        <p>+100 %</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Количество групп:</span>\r\n                        <p>15</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>\r\n                            Средняя прибыль/убыток на каждого инвестора:\r\n                        </span>\r\n                        <p>+ 10 USD</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => {\r\n                            if (isAuth) {\r\n                                hadnleClick(false);\r\n                            } else {\r\n                                navigate(router.login);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Копировать\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseGroupModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport InfoBlock from \"../../components/UI/InfoBlock\";\r\nimport Select from \"@components/Select\";\r\nimport UserLine from \"../../components/UserChart/UserLine\";\r\nimport UserBar from \"../../components/UserChart/UserBar\";\r\nimport UserPie from \"../../components/UserChart/UserPie\";\r\nimport InvestorGroup from \"../../components/InvestorComponents/InvestorGroup\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport SpinnerLoad from \"../../components/SpinnerLoad\";\r\nimport CloseGroup from \"../../components/InvestorComponents/CloseGroup\";\r\nimport {\r\n    getBalance,\r\n    getProfileInfo,\r\n    userActions,\r\n} from \"../../store/user/user.api\";\r\nimport {\r\n    getGroupInfo,\r\n    getTraderDashBoardGroups,\r\n    groupActions,\r\n} from \"../../store/group/group.api\";\r\nimport { useParams } from \"react-router\";\r\nimport InsideGroupModal from \"../../components/Modals/InsideGroupModal\";\r\nimport LeaveGroup from \"../../components/Modals/LeaveGroup\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\nimport CloseGroupModal from \"../../components/Modals/CloseGroupModal\";\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n    {\r\n        id: 2,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n    {\r\n        id: 3,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n];\r\n\r\nconst UserFirstTab = ({ id }) => {\r\n    const [groupId, setGroupId] = useState();\r\n    const [leaveId, setLeaveId] = useState();\r\n    const [closeId, setCloseId] = useState();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    const { user, isTraider } = useSelector((state) => state.user);\r\n    const { groups, message, complete } = useSelector((state) => state.group);\r\n\r\n    useEffect(() => {\r\n        if (message === \"Вы успешно присоединились\") {\r\n            setGroupId(\"\");\r\n            dispatch(getBalance());\r\n        }\r\n    }, [message]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTraderDashBoardGroups(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__title\">\r\n                <span>РЕЗУЛЬТАТЫ</span>\r\n            </div>\r\n            <div className=\"user_tab__results\">\r\n                <div className=\"user_tab__results__profit\">\r\n                    <InfoBlock\r\n                        label=\"Ежедневно\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Недельный\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"В месяц\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Годовой\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                </div>\r\n                <div className=\"user_tab__results__filter\">\r\n                    <span>Показать за время</span>\r\n                    <Select defaultOption=\"Поледние 24 часа\">\r\n                        <li>jojo</li>\r\n                        <li>jojo</li>\r\n                        <li>jojo</li>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__chart\">\r\n                <UserLine />\r\n            </div>\r\n            <div className=\"user_tab__chart_result\">\r\n                <div className=\"user_tab__chart_result__block\">\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>РЕЗУЛЬТАТЫ</span>\r\n                    </div>\r\n                    <div className=\"select_cont\">\r\n                        <span>Показать за время</span>\r\n                        <Select defaultOption=\"Поледние 24 часа\">\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart\">\r\n                        <UserBar />\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>ТОП 3 СИМВОЛОВ УРОВНЯ ПРОДАЖ</span>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__table\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span>Символ</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span>Уровень продаж</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span>Win рейт</span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>НЕДАВНО ПРОДАВАЛИСЬ</span>\r\n                    </div>\r\n                    <ul className=\"user_tab__chart_result__block__list\">\r\n                        <li>\r\n                            NEARUSDT, ADAUSDT, GMTUSDT, BTCUSDT, SOLUSDT,\r\n                            LUNAUSDT\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"user_tab__chart_result__block\">\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>Предпочтение символа</span>\r\n                    </div>\r\n                    <div className=\"select_cont\">\r\n                        <span>Показать за время</span>\r\n                        <Select defaultOption=\"Поледние 24 часа\">\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart_pie\">\r\n                        <UserPie />\r\n                        <span>\r\n                            20.00% <br />\r\n                            BTCUSDT\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart_result\">\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"purple\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"pink\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"yellow\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"blue\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__open_groups\">\r\n                <div className=\"user_tab__open_groups__title\">\r\n                    <span>ОТКРЫТЫЕ ГРУППЫ</span>\r\n                </div>\r\n                <div className=\"user_tab__open_groups__content\">\r\n                    {groups?.open?.length\r\n                        ? groups?.open?.length\r\n                            ? groups?.open.map((e) => (\r\n                                  <InvestorGroup\r\n                                      className=\"open_group_item\"\r\n                                      e={e}\r\n                                      setleavegroupid={(e) => setLeaveId(e)}\r\n                                      setgroupid={(e) => setGroupId(e)}\r\n                                  />\r\n                              ))\r\n                            : \"\"\r\n                        : \"Не найдено\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__close_groups\">\r\n                <div className=\"user_tab__open_groups__title\">\r\n                    <span>ЗАКРЫТЫЕ ГРУППЫ</span>\r\n                </div>\r\n                {groups?.close?.length ? (\r\n                    <>\r\n                        <div className=\"user_tab__close_groups__filters\">\r\n                            <div className=\"select_cont\">\r\n                                <span>Показать за время</span>\r\n                                <Select defaultOption=\"Поледние 24 часа\">\r\n                                    <li>jojo</li>\r\n                                    <li>jojo</li>\r\n                                    <li>jojo</li>\r\n                                </Select>\r\n                            </div>\r\n                            <InfoBlock\r\n                                label=\"Количество групп\"\r\n                                value={`15`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label=\"Процент завершенных групп\"\r\n                                value={`0 %`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label=\"Коэфициент прыбльных и убыточных групп\"\r\n                                value={`12 %`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                        </div>\r\n                        <div className=\"user_tab__close_groups__content\">\r\n                            {groups ? (\r\n                                groups?.close?.length ? (\r\n                                    data?.close.map((e) => (\r\n                                        <CloseGroup\r\n                                            className=\"close_groups_item\"\r\n                                            e={e}\r\n                                            setgroupid={(e) => setCloseId(e)}\r\n                                        />\r\n                                    ))\r\n                                ) : null\r\n                            ) : (\r\n                                <SpinnerLoad />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    \"Не найдено\"\r\n                )}\r\n            </div>\r\n            {groupId && (\r\n                <InsideGroupModal\r\n                    handleChange={() => setGroupId(\"\")}\r\n                    info={groupId}\r\n                />\r\n            )}\r\n            {closeId && (\r\n                <CloseGroupModal\r\n                    handleChange={() => setCloseId(\"\")}\r\n                    info={closeId}\r\n                />\r\n            )}\r\n            {leaveId && (\r\n                <LeaveGroup\r\n                    info={leaveId}\r\n                    handleChange={() => setLeaveId(\"\")}\r\n                />\r\n            )}\r\n            {message\r\n                ? Object.values(message).map((e) => (\r\n                      <MessageBox message={e} error={true} />\r\n                  ))\r\n                : null}\r\n            {complete ? <MessageBox message={complete} error={false} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserFirstTab;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@components/Button\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getOpenTrades } from \"../../store/group/group.api\";\r\n\r\nconst UserSecondTab = ({ id }) => {\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const [filter, setFilter] = useState(\"days\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getOpenTrades(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__btns\">\r\n                <Button\r\n                    className={filter === \"days\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"days\")}\r\n                >\r\n                    Дни\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"week\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"week\")}\r\n                >\r\n                    Неделя\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"month\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"month\")}\r\n                >\r\n                    Месяц\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"threemonth\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"threemonth\")}\r\n                >\r\n                    Три месяца\r\n                </Button>\r\n            </div>\r\n            <div className=\"user_tab__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span>Символ</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Размер</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена входа</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена маркировки</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена ликвидации</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Маржа</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>PNL(ROE%)</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Прибыль</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Процент</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 18 }).map((e) => (\r\n                            <tr>\r\n                                <td className=\"simbol green_left_border\">\r\n                                    <div>\r\n                                        <span>GMTUSDT</span>\r\n                                        <p>Бессрочный</p>\r\n                                    </div>\r\n                                    <icon>11x</icon>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>18.35939 USDT</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td className=\"yellow\">\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td className=\"marga\">\r\n                                    <span>2.35 USDT</span>\r\n                                    <p>(Кросс)</p>\r\n                                </td>\r\n                                <td className=\"red_text\">\r\n                                    <span>GMTUSDT</span>\r\n                                    <p>(-5.23% +10 USDT)</p>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>+10 USDT</span>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>+10%</span>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"user_tab__mobile_table\">\r\n                {Array.from({ length: 18 }).map((e, idx) => (\r\n                    <div className=\"user_tab__mobile_table__card\" key={idx + 1}>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Символ</span>\r\n                            </div>\r\n                            <div className=\"line__desc simbol\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>Бессрочный</p>\r\n                                <icon>11x</icon>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Размер</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>18.35939 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена входа</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена маркировки</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена ликвидации</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Маржа</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35 USDT</span>\r\n                                <p>(Кросс)</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>PNL(ROE%)</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>(-5.23% +10 USDT)</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Прибыль</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>+10 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Процент</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>+10%</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"user_tab__paginate\">\r\n                <ReactPaginate\r\n                    className=\"react-paginate\"\r\n                    breakLabel=\"...\"\r\n                    nextLabel=\">\"\r\n                    onPageChange={handlePageClick}\r\n                    pageRangeDisplayed={4}\r\n                    pageCount={50}\r\n                    previousLabel=\"<\"\r\n                    renderOnZeroPageCount={null}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSecondTab;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"@components/Button\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst UserThirdTab = () => {\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const [filter, setFilter] = useState(\"days\");\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__btns\">\r\n                <Button\r\n                    className={filter === \"days\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"days\")}\r\n                >\r\n                    Дни\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"week\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"week\")}\r\n                >\r\n                    Неделя\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"month\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"month\")}\r\n                >\r\n                    Месяц\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"threemonth\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"threemonth\")}\r\n                >\r\n                    Три месяца\r\n                </Button>\r\n            </div>\r\n            <div className=\"user_tab__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span>Время</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Тикер</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Сторона</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Количество</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Комиссия</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Реализованная прибыль</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 18 }).map((e) => (\r\n                            <tr>\r\n                                <td>\r\n                                    <span>2022-04-18 16:28:39</span>\r\n                                </td>\r\n                                <td className=\"simbol\">\r\n                                    <div>\r\n                                        <span>GMTUSDT</span>\r\n                                        <p>Бессрочный</p>\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>Открыть лонг</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                                <td className=\"marga\">\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"user_tab__mobile_table\">\r\n                {Array.from({ length: 18 }).map((e, idx) => (\r\n                    <div className=\"user_tab__mobile_table__card\" key={idx + 1}>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Время</span>\r\n                            </div>\r\n                            <div className=\"line__desc simbol\">\r\n                                <span>2022-04-18 16:28:39</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Тикер</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>Бессрочный</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Сторона</span>\r\n                            </div>\r\n                            <div className=\"line__desc green\">\r\n                                <span>Открыть лонг</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Количество</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>11.79695 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Комиссия</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>0.00471877 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Реализованная прибыль</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>0.00471877</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"user_tab__paginate\">\r\n                <ReactPaginate\r\n                    className=\"react-paginate\"\r\n                    breakLabel=\"...\"\r\n                    nextLabel=\">\"\r\n                    onPageChange={handlePageClick}\r\n                    pageRangeDisplayed={4}\r\n                    pageCount={50}\r\n                    previousLabel=\"<\"\r\n                    renderOnZeroPageCount={null}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserThirdTab;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 19,\n    viewBox: \"0 0 19 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.7695 6.05859L17.7969 6.79688C18.2188 6.86719 18.5703 7.14844 18.7109 7.57031C18.8516 7.95703 18.7461 8.41406 18.4297 8.69531L14.7734 12.3164L15.6523 17.4492C15.7227 17.8711 15.5469 18.293 15.1953 18.5391C14.8438 18.8203 14.3867 18.8203 14 18.6445L9.5 16.2188L4.96484 18.6445C4.61328 18.8203 4.12109 18.8203 3.80469 18.5391C3.45312 18.293 3.27734 17.8711 3.34766 17.4492L4.19141 12.3164L0.535156 8.69531C0.21875 8.41406 0.113281 7.95703 0.253906 7.57031C0.394531 7.14844 0.746094 6.86719 1.16797 6.79688L6.23047 6.05859L8.48047 1.38281C8.65625 0.996094 9.04297 0.75 9.5 0.75C9.92188 0.75 10.3086 0.996094 10.4844 1.38281L12.7695 6.05859Z\",\n    fill: \"#FF7A00\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.169837a523c8997afb561e6eabc2373c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStarBorder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 27,\n    viewBox: \"0 0 28 27\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.949 22.3906L6.99199 26.1484C6.58574 26.3516 6.12871 26.3008 5.72246 26.0469C5.36699 25.793 5.16387 25.2852 5.21465 24.8281L6.58574 16.957L0.949023 11.3711C0.593554 11.0156 0.491992 10.5586 0.644336 10.1016C0.796679 9.69531 1.15215 9.33984 1.60918 9.28906L9.37871 8.12109L12.8826 0.960938C13.0857 0.554688 13.492 0.25 13.949 0.25C14.4568 0.25 14.8631 0.554688 15.0662 0.960938L18.5701 8.12109L26.3396 9.28906C26.7967 9.33984 27.1521 9.69531 27.3045 10.1016C27.4568 10.5586 27.3553 11.0156 26.9998 11.3711L21.3631 16.957L22.6834 24.8281C22.785 25.2852 22.5818 25.793 22.2264 26.0469C21.8201 26.3008 21.3123 26.3516 20.9061 26.1484L13.949 22.3906ZM10.1404 8.47656C9.98809 8.73047 9.78496 8.88281 9.53105 8.93359L1.71074 10.1016C1.5584 10.1016 1.45684 10.2031 1.40605 10.3555C1.35527 10.5078 1.40605 10.6602 1.50762 10.7617L7.14434 16.3477C7.34746 16.5508 7.39824 16.8047 7.39824 17.0586L6.02715 24.9805C6.02715 25.1328 6.07793 25.2852 6.17949 25.3867C6.33184 25.4883 6.48418 25.4883 6.63652 25.3867L13.5936 21.6797C13.8475 21.5781 14.1014 21.5781 14.3553 21.6797L21.3123 25.3867C21.4646 25.4883 21.617 25.4883 21.7186 25.3867C21.8709 25.2852 21.9217 25.1328 21.9217 24.9805L20.5506 17.0586C20.4998 16.8047 20.6014 16.5508 20.8045 16.3477L26.4412 10.7617C26.5428 10.6602 26.5936 10.5078 26.5428 10.3555C26.492 10.2031 26.3904 10.1016 26.2381 10.1016L18.4178 8.93359C18.1639 8.88281 17.9607 8.73047 17.8084 8.47656L14.3553 1.31641C14.2537 1.16406 14.1014 1.0625 13.949 1.0625C13.7967 1.0625 13.6951 1.16406 13.5936 1.31641L10.1404 8.47656ZM0.949023 11.3711L1.50762 10.7617L0.949023 11.3711Z\",\n    fill: \"#FF7A00\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStarBorder);\nexport default __webpack_public_path__ + \"static/media/starBorder.90f456216910edeef263ce1942dc8d4e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\n\r\n//Icons\r\nimport star from \"@assets/img/star.svg\";\r\nimport starBorder from \"@assets/img/starBorder.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst StartClick = () => {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    return (\r\n        <img\r\n            src={toggle ? star : starBorder}\r\n            alt=\"\"\r\n            onClick={() => setToggle(!toggle)}\r\n        />\r\n    );\r\n};\r\n\r\nconst EstimateModal = ({ handleChange, info }) => {\r\n    const [toggle, setToggle] = useState(0);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(Array.from(Array(toggle + 1).keys()));\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>ОЦЕНИТЬ ТРЕЙДЕРА</span>\r\n                </div>\r\n                <div className=\"modal__block__estimate\">\r\n                    {Array.from({ length: 10 }).map((e, idx) => (\r\n                        <img\r\n                            src={toggle > idx - 1 ? star : starBorder}\r\n                            alt={idx}\r\n                            onClick={() => setToggle(idx)}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отменить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EstimateModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport UserInfoBlock from \"../../components/UI/UserInfoBlock\";\r\nimport InfoBlock from \"../../components/UI/InfoBlock\";\r\nimport Button from \"@components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\n\r\n//Styles\r\nimport \"./User.scss\";\r\nimport UserFirstTab from \"./UserFirstTab\";\r\nimport UserSecondTab from \"./UserSecondTab\";\r\nimport UserThirtTab from \"./UserThirtTab\";\r\nimport CopyTradeModal from \"../../components/Modals/CopyTradeModal\";\r\nimport FreePlaceModal from \"../../components/Modals/FreePlaceModal\";\r\nimport {\r\n    changeRate,\r\n    getProfileInfo,\r\n    userActions,\r\n} from \"../../store/user/user.api\";\r\nimport { useParams } from \"react-router\";\r\nimport EstimateModal from \"../../components/Modals/EstimateModal\";\r\nimport SpinnerLoad from \"../../components/SpinnerLoad\";\r\n\r\nconst User = () => {\r\n    const [copyTradeId, setCopyTradeId] = useState();\r\n    const [freePlaceChange, setFreePlaceChange] = useState();\r\n    const [tab, setTab] = useState(0);\r\n    const [renderBlock, setRenderBlock] = useState();\r\n    const [estimate, setEstimate] = useState(false);\r\n\r\n    const { user, isTraider, profile } = useSelector((state) => state.user);\r\n    const { groups, message, complete } = useSelector((state) => state.group);\r\n\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileInfo(params.id));\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(userActions.message(\"\"));\r\n    }, []);\r\n\r\n    const getTab = () => {\r\n        switch (tab) {\r\n            case 0:\r\n                setRenderBlock(<UserFirstTab id={params.id} />);\r\n                break;\r\n            case 1:\r\n                setRenderBlock(<UserSecondTab id={params.id} />);\r\n                break;\r\n            case 2:\r\n                setRenderBlock(<UserThirtTab id={params.id} />);\r\n                break;\r\n            default:\r\n                setRenderBlock(<UserFirstTab id={params.id} />);\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTab();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getTab();\r\n    }, [tab]);\r\n\r\n    const estimateChange = (data) => {\r\n        dispatch(changeRate(params.id, data));\r\n        setEstimate(false);\r\n    };\r\n\r\n    return profile ? (\r\n        <div className=\"main\">\r\n            <div className=\"main__header\">\r\n                <div className=\"main__header__title\">\r\n                    <UserInfoBlock\r\n                        email={profile?.user?.email}\r\n                        name={`${profile?.user?.first_name} ${profile?.user?.last_name}`}\r\n                        logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                    />\r\n                </div>\r\n                <div className=\"main__header__desc\">\r\n                    <span>\r\n                        ОЦЕНКА: {profile?.rate}/10{\" \"}\r\n                        <svg\r\n                            width=\"19\"\r\n                            height=\"19\"\r\n                            viewBox=\"0 0 19 19\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M12.7695 6.05859L17.7969 6.79688C18.2188 6.86719 18.5703 7.14844 18.7109 7.57031C18.8516 7.95703 18.7461 8.41406 18.4297 8.69531L14.7734 12.3164L15.6523 17.4492C15.7227 17.8711 15.5469 18.293 15.1953 18.5391C14.8438 18.8203 14.3867 18.8203 14 18.6445L9.5 16.2188L4.96484 18.6445C4.61328 18.8203 4.12109 18.8203 3.80469 18.5391C3.45312 18.293 3.27734 17.8711 3.34766 17.4492L4.19141 12.3164L0.535156 8.69531C0.21875 8.41406 0.113281 7.95703 0.253906 7.57031C0.394531 7.14844 0.746094 6.86719 1.16797 6.79688L6.23047 6.05859L8.48047 1.38281C8.65625 0.996094 9.04297 0.75 9.5 0.75C9.92188 0.75 10.3086 0.996094 10.4844 1.38281L12.7695 6.05859Z\"\r\n                                fill=\"#FF7A00\"\r\n                            />\r\n                        </svg>\r\n                    </span>\r\n                    <Button\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => setEstimate(true)}\r\n                    >\r\n                        Оценить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main__user_content\">\r\n                <div className=\"main__user_content__desc\">\r\n                    <p>Controlling the risk is my key principle for trading</p>\r\n                </div>\r\n                <div className=\"main__user_content__profit\">\r\n                    <InfoBlock\r\n                        label=\"Общий ROI\"\r\n                        value={`${profile?.roi_statistic} %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Общий PNL\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Общий MDD\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Продажи за 7 дней\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Вин рейт 30D\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Мин.сумма копии\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Копи трейдеров\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                </div>\r\n                <div className=\"main__user_content__copyinfo\">\r\n                    <div className=\"main__user_content__copyinfo__title\">\r\n                        <p>Продолжительность: 36 дней</p>\r\n                        <p>\r\n                            MDD и Win Rate обновляются ежедневно в 03:00 UTC,\r\n                            все остальные данные обновляются ежечасно.\r\n                        </p>\r\n                    </div>\r\n                    <Button\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => setCopyTradeId()}\r\n                    >\r\n                        Копировать\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"main__user_content__tabs\">\r\n                    <ul className=\"main__user_content__tabs__links\">\r\n                        <li\r\n                            onClick={() => setTab(0)}\r\n                            className={tab === 0 && \"active\"}\r\n                        >\r\n                            Статистика\r\n                        </li>\r\n                        <li\r\n                            onClick={() => setTab(1)}\r\n                            className={tab === 1 && \"active\"}\r\n                        >\r\n                            Открытые сделки\r\n                        </li>\r\n                        <li\r\n                            onClick={() => setTab(2)}\r\n                            className={tab === 2 && \"active\"}\r\n                        >\r\n                            История сделок\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"main__user_content__tabs__block\">\r\n                        {renderBlock}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {copyTradeId && (\r\n                <CopyTradeModal\r\n                    handleChange={() => setCopyTradeId(\"\")}\r\n                    info={copyTradeId}\r\n                />\r\n            )}\r\n            {freePlaceChange && (\r\n                <FreePlaceModal\r\n                    handleChange={() => setFreePlaceChange(\"\")}\r\n                    info={freePlaceChange}\r\n                />\r\n            )}\r\n            {estimate && (\r\n                <EstimateModal\r\n                    handleChange={(e) => estimateChange(e)}\r\n                    info={params.id}\r\n                />\r\n            )}\r\n        </div>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default User;\r\n"],"names":["e","setgroupid","clean_group","className","navigate","useNavigate","dispatch","useDispatch","useState","readMore","setReadMore","leaveToggle","setLeaveToggle","name","first_name","last_name","email","rating","onClick","router","trader","logo","title","description","split","length","completed","amount_collected","need_sum","from","to","start","start_date","end","end_date","status_for_user","status","id","disabled","theme","handleChange","toggle","leaveFromGroup","info","sum","setSum","useSelector","state","group","load","isAuth","auth","hadnleClick","console","log","useEffect","getGroupInfo","investors","group_size","min","min_entry_sum","max","max_entry_sum","onChange","label","href","joinToGroup","styles","backgroundColor","height","width","numberWithSpaces","style","dateFormatter","Date","children","defaultOption","open","setOpen","select","setSelect","document","addEventListener","target","localName","innerText","src","arrow","alt","CustomizedDot","props","cx","cy","value","x","y","viewBox","fill","xmlns","r","stroke","data","setData","d","i","push","ROI","Math","round","random","ResponsiveContainer","aspect","AreaChart","margin","top","x1","y1","x2","y2","offset","stopColor","stopOpacity","Tooltip","cursor","XAxis","dataKey","YAxis","padding","bottom","Legend","Area","type","strokeWidth","activeDot","idx","BarChart","barSize","scale","left","right","dx","Bar","radius","COLORS","PieChart","Pie","innerRadius","outerRadius","map","entry","index","Cell","CardInfo","SpinnerLoad","groupId","setGroupId","leaveId","setLeaveId","closeId","setCloseId","useParams","user","isTraider","groups","message","complete","getBalance","getTraderDashBoardGroups","InfoBlock","vWeigth","color","opactityLabel","Select","InvestorGroup","setleavegroupid","close","InsideGroupModal","LeaveGroup","Object","values","MessageBox","error","setItemOffset","filter","setFilter","getOpenTrades","Array","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","setToggle","keys","star","starBorder","copyTradeId","setCopyTradeId","freePlaceChange","setFreePlaceChange","tab","setTab","renderBlock","setRenderBlock","estimate","setEstimate","profile","params","getProfileInfo","userActions","getTab","UserThirtTab","UserInfoBlock","rate","roi_statistic","CopyTradeModal","FreePlaceModal","changeRate","estimateChange"],"sourceRoot":""}
{"version":3,"file":"static/js/300.edc4442e.chunk.js","mappings":"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","sources":["assets/img/userlogo.svg","components/CardInfo/index.js","components/Checkbox/index.js","components/InvestorComponents/InvestorGroup/index.js","components/Modals/AgreeModal.js","components/Modals/InsideGroupModal.js","components/Modals/LeaveGroup.js","components/ProgressBar/index.js","components/RangeSlider/index.js","components/UI/InfoBlock/index.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserlogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 15,\n    viewBox: \"0 0 13 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.5 7.25C8.41406 7.25 10 5.69141 10 3.75C10 1.83594 8.41406 0.25 6.5 0.25C4.55859 0.25 3 1.83594 3 3.75C3 5.69141 4.55859 7.25 6.5 7.25ZM7.86719 8.5625H5.10547C2.48047 8.5625 0.375 10.6953 0.375 13.3203C0.375 13.8398 0.785156 14.25 1.30469 14.25H11.668C12.1875 14.25 12.625 13.8398 12.625 13.3203C12.625 10.6953 10.4922 8.5625 7.86719 8.5625Z\",\n    fill: \"#A8DC66\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserlogo);\nexport default __webpack_public_path__ + \"static/media/userlogo.824f9db4facee2f37f1ae20ad3143292.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\n//Icons\r\nimport userlogo from \"@assets/img/userlogo.svg\";\r\n\r\n//Styles\r\nimport \"./CardInfo.scss\";\r\nimport UserInfoBlock from \"../UI/UserInfoBlock\";\r\n\r\nconst CardInfo = ({\r\n    children,\r\n    name,\r\n    email,\r\n    rating,\r\n    result = \"\",\r\n    logo,\r\n    className,\r\n    onClick,\r\n    end = false,\r\n    id,\r\n}) => {\r\n    return (\r\n        <div className={`cardinfo ${className}`}>\r\n            {end && (\r\n                <div className={`cardinfo__status`}>\r\n                    <span>Группа заполнена</span>\r\n                </div>\r\n            )}\r\n            <div className=\"cardinfo__header\">\r\n                <UserInfoBlock\r\n                    name={name}\r\n                    email={email}\r\n                    logo={logo}\r\n                    onClick={onClick}\r\n                    id={id}\r\n                />\r\n                {rating ? (\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div className=\"cardinfo__header__rating\">\r\n                            <img src={userlogo} alt=\"userlogo\" />\r\n                            <span>{rating}</span>\r\n                        </div>\r\n                        {result && (\r\n                            <div className=\"cardinfo__header__rating\">\r\n                                <span>+ {result} %</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div\r\n                className={`cardinfo__content ${\r\n                    className && className + \"__content\"\r\n                }`}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardInfo;\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./Checkbox.scss\";\r\n\r\nconst Checkbox = ({ id, group, value, label, onClick, ...props }) => {\r\n    return (\r\n        <div className=\"custom_checkbox\" onClick={onClick}>\r\n            <input type=\"checkbox\" id={id} name={group} {...props} />\r\n            <label for={id}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport CardInfo from \"@components/CardInfo\";\r\nimport Button from \"@components/Button\";\r\nimport ProgressBar from \"@components/ProgressBar\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../../utils/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { joinToGroup, leaveFromGroup } from \"../../../store/group/group.api\";\r\nimport SpinnerLoad from \"../../SpinnerLoad\";\r\nimport LeaveGroup from \"../../Modals/LeaveGroup\";\r\nimport InsideGroupModal from \"../../Modals/InsideGroupModal\";\r\n\r\nconst InvestorGroup = ({ e, clean_group, setgroupid, className }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [readMore, setReadMore] = useState(true);\r\n    const [leaveToggle, setLeaveToggle] = useState(false);\r\n    const [InsideToggle, setInsideToggle] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        navigate(`${router.profile}/${e?.trader}`);\r\n    };\r\n\r\n    const leave = (toggle) => {\r\n        if (e.status_for_user && toggle) {\r\n            dispatch(leaveFromGroup(e?.id));\r\n        }\r\n        setLeaveToggle(false);\r\n    };\r\n\r\n    return e ? (\r\n        <CardInfo\r\n            className={`${className}`}\r\n            name={`${e.first_name} ${e.last_name}`}\r\n            email={e.email}\r\n            rating={e.rating}\r\n            onClick={handleClick}\r\n            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n        >\r\n            <div className={`${className}__title`}>\r\n                <span>{e.title}</span>\r\n            </div>\r\n            <div className={`${className}__desc ${readMore && \"active\"}`}>\r\n                <p>{e.description}</p>\r\n            </div>\r\n            {e?.description?.length > 30 ? (\r\n                <Button onClick={() => setReadMore(!readMore)}>\r\n                    ПОКАЗАТЬ ВСЕ\r\n                </Button>\r\n            ) : null}\r\n            <div className={`${className}__linebar`}>\r\n                <ProgressBar\r\n                    completed={(e.amount_collected / e.need_sum) * 100}\r\n                    from={e.amount_collected}\r\n                    to={e.need_sum}\r\n                    start={e.start_date}\r\n                    end={e.end_date}\r\n                />\r\n            </div>\r\n            <Button\r\n                onClick={() => {\r\n                    if (e.status_for_user) {\r\n                        setLeaveToggle(true);\r\n                    } else {\r\n                        if (e.status === \"recruited\") {\r\n                            setInsideToggle(true);\r\n                        }\r\n                    }\r\n                }}\r\n                disabled={e.status === \"end\"}\r\n                theme={\r\n                    e.status_for_user\r\n                        ? e.status === \"completed\"\r\n                            ? \"disabled\"\r\n                            : e.status === \"recruited\"\r\n                            ? \"beforesubmit\"\r\n                            : e.status === \"was\"\r\n                            ? \"aftersubmit\"\r\n                            : e.status === \"completed\"\r\n                            ? \"disabled\"\r\n                            : \"\"\r\n                        : \"aftersubmit\"\r\n                }\r\n            >\r\n                {e.status_for_user\r\n                    ? e.status === \"completed\"\r\n                        ? \"Группа завершена\"\r\n                        : e.status === \"recruited\"\r\n                        ? \"Вступить в группу\"\r\n                        : e.status === \"was\"\r\n                        ? \"Выйти из группы\"\r\n                        : \"\"\r\n                    : \"Выйти из группы\"}\r\n            </Button>\r\n\r\n            {InsideToggle ? (\r\n                <InsideGroupModal\r\n                    handleChange={() => setInsideToggle(false)}\r\n                    info={e.id}\r\n                />\r\n            ) : null}\r\n            {leaveToggle ? <LeaveGroup handleChange={leave} /> : null}\r\n        </CardInfo>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default InvestorGroup;\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst AgreeModal = React.memo(({ handleChange }) => {\r\n    const [check, setCheck] = useState(false);\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Вы действиетльно хотите продолжить?</span>\r\n                </div>\r\n                <div className=\"modal__block__desc\">\r\n                    <span>\r\n                        Нажимая на кнопку ниже, я принимаю условия\r\n                        пользовательсвого соглашения\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal__block__confirm\">\r\n                    <Checkbox\r\n                        checked={check}\r\n                        // onClick={() => setCheck(!check)}\r\n                        onChange={(e) => setCheck(e.target.checked)}\r\n                        id=\"register_confirm_agree\"\r\n                        group=\"register_confirm_agree\"\r\n                        label={`Я принимаю условия`}\r\n                    />\r\n                    <a href=\"#\">соглашения</a>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        disabled={!check}\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AgreeModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\nimport ProgressBar from \"@components/ProgressBar\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGroupInfo, joinToGroup } from \"../../store/group/group.api\";\r\nimport SpinnerLoad from \"../SpinnerLoad\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\nimport AgreeModal from \"./AgreeModal\";\r\n\r\nconst InsideGroupModal = ({ handleChange, info }) => {\r\n    const [sum, setSum] = useState(0);\r\n    const [modalTab, setModalTab] = useState(false);\r\n    const [check, setCheck] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { group, load } = useSelector((state) => state.group);\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            handleChange(0);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (info) {\r\n            dispatch(getGroupInfo(info));\r\n        }\r\n    }, [info]);\r\n\r\n    const rangeChange = (length) => {\r\n        setSum(length);\r\n    };\r\n\r\n    const join = (id) => {\r\n        if (isAuth) {\r\n            dispatch(joinToGroup(id, sum));\r\n        } else {\r\n            navigate(router.login);\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        navigate(`${router.profile}/${group?.trader}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!modalTab && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal__block\">\r\n                        {group ? (\r\n                            <>\r\n                                <div className=\"modal__block__title\">\r\n                                    <span>{group.title}</span>\r\n                                </div>\r\n                                <div className=\"modal__block__desc opacity\">\r\n                                    <span>{group.description}</span>\r\n                                </div>\r\n                                <div className=\"modal__block__line\"></div>\r\n                                <CardInfo\r\n                                    id={group.id}\r\n                                    className=\"modal__block__profit\"\r\n                                    name={`${group.first_name} ${group.last_name}`}\r\n                                    email={group.email}\r\n                                    onClick={handleClick}\r\n                                    rating={`${group.investors.length}/${group.group_size}`}\r\n                                    logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                                />\r\n                                <div className=\"modal__block__line\"></div>\r\n                                <span className=\"w400 f12\">\r\n                                    {Math.round(\r\n                                        (Date.now() -\r\n                                            new Date(group?.end_date)) /\r\n                                            (1000 * 60 * 60 * 24)\r\n                                    )\r\n                                        .toString()\r\n                                        .replace(\"-\", \"\")}{\" \"}\r\n                                    дней\r\n                                </span>\r\n                                <ProgressBar\r\n                                    completed={\r\n                                        (group.amount_collected /\r\n                                            group.need_sum) *\r\n                                        100\r\n                                    }\r\n                                    from={group.amount_collected}\r\n                                    to={group.need_sum}\r\n                                    start={group.start_date}\r\n                                    end={group.end_date}\r\n                                />\r\n                                <span className=\"w700 f12\">\r\n                                    ВАША СУММА ВСТУПЛЕНИЯ\r\n                                </span>\r\n                                <RangeSlider\r\n                                    min={group?.min_entry_sum}\r\n                                    max={group?.max_entry_sum}\r\n                                    onChange={(e) => rangeChange(e)}\r\n                                />\r\n                                <div className=\"modal__block__confirm\">\r\n                                    <Checkbox\r\n                                        id={info}\r\n                                        checked={check}\r\n                                        onChange={(e) =>\r\n                                            setCheck(e.target.checked)\r\n                                        }\r\n                                        label=\"Я принимаю условия\"\r\n                                    />\r\n                                    <span>\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            onClick={() => setModalTab(true)}\r\n                                        >\r\n                                            соглашения\r\n                                        </a>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"modal__block__btns\">\r\n                                    <Button\r\n                                        className=\"modal__block__btns__button\"\r\n                                        theme=\"aftersubmit\"\r\n                                        onClick={() => hadnleClick(false)}\r\n                                    >\r\n                                        Отмена\r\n                                    </Button>\r\n                                    <Button\r\n                                        className=\"modal__block__btns__button\"\r\n                                        theme={\r\n                                            group.status === \"recruited\"\r\n                                                ? \"beforesubmit\"\r\n                                                : \"aftersubmit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            join(group.id);\r\n                                            hadnleClick(true);\r\n                                        }}\r\n                                    >\r\n                                        {load ? (\r\n                                            <SpinnerLoad />\r\n                                        ) : group.status === \"recruited\" ? (\r\n                                            \"Вступить\"\r\n                                        ) : (\r\n                                            \"Выйти из группы\"\r\n                                        )}\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <SpinnerLoad />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {modalTab && (\r\n                <AgreeModal\r\n                    handleChange={(toggle) => {\r\n                        setCheck(toggle);\r\n                        setModalTab(false);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InsideGroupModal;\r\n","import React from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Field from \"@components/Field\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst LeaveGroup = ({ handleChange, info }) => {\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Выйти из группы ?</span>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"danger\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Выйти\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отменить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaveGroup;\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./ProgressBar.scss\";\r\n\r\n//Utils\r\nimport { numberWithSpaces, dateFormatter } from \"@utils/stringHelper\";\r\n\r\nconst ProgressBar = ({ completed, from, to, start, end }) => {\r\n    const styles = {\r\n        backgroundColor: \"#61CB58\",\r\n        height: \"4px\",\r\n        width: `${completed}%`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"progressbar\">\r\n            <div className=\"progressbar__from_to\">\r\n                <span>{from ? numberWithSpaces(from, \"$\") : 0}</span>\r\n                <span>{numberWithSpaces(to, \"$\")}</span>\r\n            </div>\r\n            <div className=\"progressbar__line\">\r\n                <div style={styles} />\r\n            </div>\r\n            {start && end ? (\r\n                <div className=\"progressbar__start_end\">\r\n                    <span>Начало: {dateFormatter(new Date(start))}</span>\r\n                    <span>Конец: {dateFormatter(new Date(end))}</span>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\n\r\n//Styles\r\nimport \"./RangeSlider.scss\";\r\n\r\nconst RangeSlider = ({ min, max, onChange }) => {\r\n    const [minVal, setMinVal] = useState(min);\r\n    const [maxVal, setMaxVal] = useState(max);\r\n    const minValRef = useRef(min);\r\n\r\n    useEffect(() => {\r\n        onChange(minVal);\r\n    }, [minVal, maxVal, onChange]);\r\n\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={minVal}\r\n                onChange={(event) => {\r\n                    const value = Math.min(Number(event.target.value), maxVal);\r\n                    setMinVal(value);\r\n                    minValRef.current = value;\r\n                }}\r\n                className=\"thumb thumb--left\"\r\n                //@ts-ignore\r\n                style={{ zIndex: minVal > max - 100 && \"5\" }}\r\n            />\r\n\r\n            <div className=\"slider\">\r\n                <div className=\"slider__values\">\r\n                    <span>{minVal}</span>\r\n                    <span>{maxVal} USD</span>\r\n                </div>\r\n                <div className=\"slider__track\" />\r\n                <div className=\"slider__range\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from \"react\";\r\nimport { dateFormatter } from \"../../../utils/stringHelper\";\r\n\r\n//Styles\r\nimport \"./InfoBlock.scss\";\r\n\r\nconst InfoBlock = ({\r\n    label,\r\n    value,\r\n    opactityLabel = false,\r\n    opactityValue = false,\r\n    color = \"\",\r\n    lWeigth = \"400\",\r\n    vWeigth = \"400\",\r\n    fontSize = \"14\",\r\n    date = false,\r\n}) => {\r\n    return (\r\n        <div className={`infoblock ${fontSize && \"f\" + fontSize}`}>\r\n            <div\r\n                className={`infoblock__label ${lWeigth && \"w\" + lWeigth} ${\r\n                    opactityLabel ? \"opacity\" : \"\"\r\n                }`}\r\n            >\r\n                <span>{label}</span>\r\n            </div>\r\n            <div\r\n                className={`infoblock__value ${color} ${\r\n                    vWeigth && \"w\" + vWeigth\r\n                } ${opactityValue ? \"opacity\" : \"\"}`}\r\n            >\r\n                <span>{date ? dateFormatter(new Date(value)) : value}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBlock;\r\n"],"names":["children","name","email","rating","result","logo","className","onClick","end","id","UserInfoBlock","style","display","flexDirection","alignItems","justifyContent","src","userlogo","alt","group","label","value","props","type","for","e","clean_group","setgroupid","navigate","useNavigate","dispatch","useDispatch","useState","readMore","setReadMore","leaveToggle","setLeaveToggle","InsideToggle","setInsideToggle","first_name","last_name","router","trader","title","description","length","completed","amount_collected","need_sum","from","to","start","start_date","end_date","status_for_user","status","disabled","theme","handleChange","info","toggle","leaveFromGroup","AgreeModal","React","check","setCheck","checked","onChange","target","href","sum","setSum","modalTab","setModalTab","useSelector","state","load","isAuth","auth","hadnleClick","useEffect","getGroupInfo","investors","group_size","Math","round","Date","now","toString","replace","min","min_entry_sum","max","max_entry_sum","joinToGroup","styles","backgroundColor","height","width","numberWithSpaces","dateFormatter","minVal","setMinVal","maxVal","minValRef","useRef","event","Number","current","zIndex","opactityLabel","opactityValue","color","lWeigth","vWeigth","fontSize","date"],"sourceRoot":""}
{"version":3,"file":"static/js/558.80aa2d12.chunk.js","mappings":"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","sources":["components/Modals/CopyTradeModal.js","components/Modals/FreePlaceModal.js","components/Select/index.js","utils/regex.js","hooks/useValidator.js","components/UserChart/UserLine.js","components/UserChart/UserBar.js","components/UserChart/UserPie.js","components/InvestorComponents/CloseGroup/index.js","components/Modals/CloseGroupModal.js","pages/User/UserFirstTab.js","pages/User/UserSecondTab.js","pages/User/UserThirtTab.js","assets/img/star.svg","assets/img/starBorder.svg","components/Modals/EstimateModal.js","pages/User/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\nimport AgreeModal from \"./AgreeModal\";\r\n\r\nexport const PareButton = () => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <Button\r\n            theme={active ? \"beforesubmit\" : \"aftersubmit\"}\r\n            onClick={() => setActive(!active)}\r\n        >\r\n            <img src={balance} alt=\"\" />\r\n            <span>USDTETH</span>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst CopyTradeModal = ({ handleChange, info }) => {\r\n    const [pareChange, setPareChange] = useState(0);\r\n    const [check, setCheck] = useState(false);\r\n    const [modalTab, setModalTab] = useState(false);\r\n    const navigate = useNavigate();\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            console.log(toggle);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    const rangeChange = (length) => {\r\n        console.log(length);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!modalTab && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal__block\">\r\n                        <div className=\"modal__block__title\">\r\n                            <span>Копирование трейдера</span>\r\n                        </div>\r\n                        <div className=\"modal__block__desc opacity\">\r\n                            <span>\r\n                                Вы можете выбрать пары и указать свою сумму,\r\n                                которую будете копировать.\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <CardInfo\r\n                            className=\"modal__block__profit\"\r\n                            name={\"Богдан Богданов\"}\r\n                            email={\"danghoang87hl@gmail.com\"}\r\n                            rating={\"50/50\"}\r\n                            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                        >\r\n                            <InfoBlock\r\n                                label={\"Уровень ROI\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                color=\"green\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label={\"Профит\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                color=\"green\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label={\"Уровень MDD\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                        </CardInfo>\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <span className=\"w700 f12\">Пары</span>\r\n                        <div className=\"modal__block__pare\">\r\n                            {Array.from({ length: 3 }).map((e, idx) => (\r\n                                <PareButton key={idx + 1} />\r\n                            ))}\r\n                        </div>\r\n                        {/* <Button>ПОКАЗАТЬ ВСЕ</Button> */}\r\n                        <span className=\"w700 f12\">ВАША СУММА КОПИРОВАНИЯ</span>\r\n                        <RangeSlider\r\n                            min={0}\r\n                            max={500}\r\n                            onChange={(e) => rangeChange(e)}\r\n                        />\r\n                        <div className=\"modal__block__confirm\">\r\n                            <Checkbox\r\n                                id={info}\r\n                                checked={check}\r\n                                onChange={(e) => setCheck(e.target.checked)}\r\n                                label=\"Я принимаю условия\"\r\n                            />\r\n                            <a href=\"#\" onClick={() => setModalTab(true)}>\r\n                                соглашения\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"modal__block__btns\">\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme=\"aftersubmit\"\r\n                                onClick={() => hadnleClick(false)}\r\n                            >\r\n                                Отмена\r\n                            </Button>\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme=\"beforesubmit\"\r\n                                onClick={() => {\r\n                                    if (isAuth) {\r\n                                        hadnleClick(false);\r\n                                    } else {\r\n                                        navigate(router.login);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Копировать\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {modalTab && (\r\n                <AgreeModal\r\n                    handleChange={(toggle) => {\r\n                        setCheck(toggle);\r\n                        setModalTab(false);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CopyTradeModal;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Field from \"@components/Field\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { emailRegEx } from \"../../utils/regex\";\r\nimport { useValidator } from \"../../hooks/useValidator\";\r\n\r\nconst FreePlaceModal = ({ handleChange }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const {\r\n        setError,\r\n        errorData: { fields, error },\r\n        ...validator\r\n    } = useValidator();\r\n\r\n    const onSubmit = (data) => {\r\n        alert(JSON.stringify(data));\r\n    };\r\n\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    let btnRef = useRef([]);\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validator.isEmailValid(email)) {\r\n            return;\r\n        }\r\n\r\n        console.log(email);\r\n        handleChange(true);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => registerHandler(e)}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            className=\"modal\"\r\n        >\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Уведомить о свободном месте</span>\r\n                </div>\r\n                <div className=\"modal__block__desc\">\r\n                    <span>\r\n                        Введите свой Email чтобы мы могли уведомить вас о\r\n                        появлении свободного места в этой группе.\r\n                    </span>\r\n                </div>\r\n                <Field\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    classNames={`${fields.email && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isEmailValid(e.target.value);\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                    error={fields.email && error}\r\n                />\r\n\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                    <Button\r\n                        disabled={validator.hasInvalidFields()}\r\n                        ref={btnRef}\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"beforesubmit\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Уведомить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FreePlaceModal;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//Icons\r\nimport arrow from \"@assets/img/selectArrow.svg\";\r\n\r\n//Styles\r\nimport \"./Select.scss\";\r\n\r\nconst Select = ({ children, className, defaultOption, onChange }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [select, setSelect] = useState(defaultOption);\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n        if (e.target.localName === \"li\") {\r\n            setSelect(e.target.innerText);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        onChange && onChange(select);\r\n    }, [select]);\r\n\r\n    const toggleSelect = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={`select ${className}`} onClick={toggleSelect}>\r\n            <span>{select}</span>\r\n            {open && <ul className=\"select__list\">{children}</ul>}\r\n            <img src={arrow} alt=\"arrow\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","export const emailRegEx =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const startDateRegEx = /^(0001).*$/;\r\n\r\nexport const phoneRegEx =\r\n    /^((8|\\+[0-79])[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\r\nexport const nameRegEx = /^[A-ZА-ЯЁ][a-zа-яё]+$/;\r\n\r\nexport const passwordRegEx = /^([^\\s])*$/;\r\n","import { useState } from \"react\";\r\nimport { emailRegEx, nameRegEx, passwordRegEx, phoneRegEx } from \"@utils/regex\";\r\nimport { checkIfFirstLetterInLowerCase } from \"@utils/stringHelper\";\r\n\r\nexport const useValidator = () => {\r\n    const [errorData, setErrorData] = useState({\r\n        fields: {\r\n            email: false,\r\n            password: false,\r\n            password_confirm: false,\r\n            phone: false,\r\n            firstName: false,\r\n            secondName: false,\r\n        },\r\n        error: \"\",\r\n    });\r\n\r\n    const setErrorFor = (errorField, valid, errorMsg) => {\r\n        setErrorData((prev) => {\r\n            return {\r\n                fields: { ...prev.fields, [errorField]: !valid },\r\n                error: errorMsg,\r\n            };\r\n        });\r\n    };\r\n\r\n    const isValid = (what, regex, errorField, errorMsg) => {\r\n        let valid = false;\r\n\r\n        if (regex.test(what)) {\r\n            errorMsg = \"\";\r\n            valid = true;\r\n        } else {\r\n            valid = false;\r\n        }\r\n\r\n        setErrorFor(errorField, valid, errorMsg);\r\n\r\n        return valid;\r\n    };\r\n\r\n    const isEmailValid = (email) => {\r\n        if (!email) {\r\n            setErrorFor(\"email\", false, \"Поле Email обязательна\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            email,\r\n            emailRegEx,\r\n            \"email\",\r\n            \"Напишите корректно: example@gmail.com\"\r\n        );\r\n    };\r\n\r\n    const isPhoneValid = (phone) => {\r\n        return isValid(phone, phoneRegEx, \"phone\", \"Поле Телефон необходимо\");\r\n    };\r\n\r\n    const isFirstNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\"firstName\", false, \"Имя должно быть с большой буквы\");\r\n            return;\r\n        }\r\n\r\n        return isValid(name, nameRegEx, \"firstName\", \"Поле имя необходимо\");\r\n    };\r\n\r\n    const isSecondNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\r\n                \"secondName\",\r\n                false,\r\n                \"Фамилия должна быть с большой буквы\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            name,\r\n            nameRegEx,\r\n            \"secondName\",\r\n            \"Поле Фамилия обязательна\"\r\n        );\r\n    };\r\n\r\n    const isPasswordValid = (password, length) => {\r\n        if (password.length < length) {\r\n            setErrorFor(\"password\", false, \"Слишком короткий пароль\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const isPasswordConfirmValid = (password, length, confirm_password) => {\r\n        if (confirm_password.length < length && confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        if (confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password_confirm\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const setError = (error) => {\r\n        setErrorData((prev) => ({ ...prev, error: error }));\r\n    };\r\n\r\n    const hasInvalidFields = () => {\r\n        return Object.values(errorData.fields).find((f) => f);\r\n    };\r\n\r\n    return {\r\n        isEmailValid,\r\n        errorData,\r\n        setErrorData,\r\n        setError,\r\n        isPhoneValid,\r\n        isFirstNameValid,\r\n        isSecondNameValid,\r\n        isPasswordValid,\r\n        hasInvalidFields,\r\n        isPasswordConfirmValid,\r\n    };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\n\r\nconst CustomizedDot = (props) => {\r\n    const { cx, cy, value } = props;\r\n\r\n    return (\r\n        <svg\r\n            x={cx - 10}\r\n            y={cy - 10}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <circle\r\n                cx=\"16\"\r\n                cy=\"16\"\r\n                r=\"12\"\r\n                fill=\"#4F9BFF\"\r\n                stroke=\"white\"\r\n                stroke-width=\"8\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst UserLine = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const d = [];\r\n        for (let i = 0; i <= 15; i++) {\r\n            d.push({\r\n                name: `${i} name`,\r\n                ROI: Math.round(Math.random() * 100),\r\n            });\r\n        }\r\n        setData(d);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                <AreaChart\r\n                    width={500}\r\n                    height={400}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                    }}\r\n                >\r\n                    <defs>\r\n                        <linearGradient\r\n                            id=\"colorview\"\r\n                            x1=\"0\"\r\n                            y1=\"0\"\r\n                            x2=\"0\"\r\n                            y2=\"1\"\r\n                        >\r\n                            <stop\r\n                                offset=\"40%\"\r\n                                stopColor=\"#4F9BFF\"\r\n                                stopOpacity={1}\r\n                            />\r\n                            <stop\r\n                                offset=\"100%\"\r\n                                stopColor=\"#fff\"\r\n                                stopOpacity={0.2}\r\n                            />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <Tooltip cursor={false} />\r\n                    <XAxis dataKey=\"ROI\" />\r\n                    <YAxis padding={{ top: 20, bottom: 20 }} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Area\r\n                        type=\"monotone\"\r\n                        dataKey=\"ROI\"\r\n                        stroke=\"#4F9BFF\"\r\n                        strokeWidth={6}\r\n                        fill=\"url(#colorview)\"\r\n                        activeDot={<CustomizedDot />}\r\n                    />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserLine;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Bar,\r\n    BarChart,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\n\r\nconst CustomizedDot = (props) => {\r\n    const { cx, cy, value } = props;\r\n\r\n    return (\r\n        <svg\r\n            x={cx - 10}\r\n            y={cy - 10}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <circle\r\n                cx=\"16\"\r\n                cy=\"16\"\r\n                r=\"12\"\r\n                fill=\"#4F9BFF\"\r\n                stroke=\"white\"\r\n                stroke-width=\"8\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst UserBar = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const d = [];\r\n        for (let i = 0; i <= 4; i++) {\r\n            d.push({\r\n                name: `${i} name`,\r\n                ROI: Math.round(Math.random() * 100),\r\n                idx: i,\r\n            });\r\n        }\r\n        setData(d);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={2}>\r\n                <BarChart data={data} barSize={50}>\r\n                    <Tooltip cursor={false} />\r\n                    <XAxis\r\n                        dataKey=\"idx\"\r\n                        scale=\"band\"\r\n                        padding={{ left: 20, right: 20 }}\r\n                    />\r\n                    <YAxis dx={-10} padding={{ bottom: 10 }} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"ROI\" fill=\"#7BB7FF\" radius={8} />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Cell, Pie, PieChart, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst COLORS = [\"#FFEA7B\", \"#7BB7FF\", \"#B57BFF\", \"#FF8042\"];\r\n\r\nconst Tip = ({ setShowTooltip, ...rest }) => {\r\n    const [payload, setPayload] = React.useState(rest.payload);\r\n\r\n    useEffect(() => {\r\n        rest.payload.length && setPayload(rest.payload);\r\n    }, [rest.payload]);\r\n\r\n    return payload.length ? (\r\n        <div\r\n            onMouseLeave={() => setShowTooltip(false)}\r\n            onMouseMove={(e) => e.stopPropagation()}\r\n            style={{\r\n                background: \"white\",\r\n                padding: \"2em\",\r\n                borderRadius: \"4px\",\r\n                boxShadow: \"0 1px 4px rgba(0,0,0,0.3)\",\r\n            }}\r\n        >\r\n            {`${payload[0].name}: ${payload[0].value}`}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nconst UserPie = () => {\r\n    const [showTooltip, setShowTooltip] = useState(false);\r\n    const [data, setData] = useState([\r\n        { name: \"Group A\", value: 400 },\r\n        { name: \"Group B\", value: 300 },\r\n        { name: \"Group C\", value: 300 },\r\n        { name: \"Group D\", value: 200 },\r\n    ]);\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" aspect={1}>\r\n            <PieChart width=\"100%\" data={data}>\r\n                <Pie\r\n                    onMouseEnter={() => setShowTooltip(true)}\r\n                    data={data}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    innerRadius={130}\r\n                    outerRadius={150}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                >\r\n                    {data.map((entry, index) => (\r\n                        <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={COLORS[index % COLORS.length]}\r\n                        />\r\n                    ))}\r\n                </Pie>\r\n                {showTooltip && (\r\n                    <Tooltip\r\n                        content={<Tip setShowTooltip={setShowTooltip} />}\r\n                        wrapperStyle={{\r\n                            visibility: \"visible\",\r\n                            pointerEvents: \"auto\",\r\n                            zIndex: \"100\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default UserPie;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport CardInfo from \"@components/CardInfo\";\r\nimport Button from \"@components/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SpinnerLoad from \"../../SpinnerLoad\";\r\n\r\n//Styles\r\nimport \"./CloseGroup.scss\";\r\n\r\nconst CloseGroup = ({ e, clean_group, setgroupid, className }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [readMore, setReadMore] = useState(true);\r\n\r\n    return e ? (\r\n        <CardInfo\r\n            className={`${className} close_group`}\r\n            name={`${e.first_name} ${e.last_name}`}\r\n            email={e.email}\r\n            end={true}\r\n            rating={e.rating}\r\n            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n        >\r\n            <div\r\n                className={`main__group_content__card__title ${className}__title close_group__title`}\r\n            >\r\n                <span>{e.title}</span>\r\n            </div>\r\n            <div\r\n                className={`main__group_content__card__desc close_group__desc ${\r\n                    readMore && \"active\"\r\n                }`}\r\n            >\r\n                <p>{e.description}</p>\r\n            </div>\r\n            {e?.description?.split(\"\").length > 100 ? (\r\n                <Button onClick={() => setReadMore(!readMore)}>\r\n                    ПОКАЗАТЬ ВСЕ\r\n                </Button>\r\n            ) : null}\r\n            <Button onClick={() => setgroupid(e?.id)} theme={\"aftersubmit\"}>\r\n                Подробнее\r\n            </Button>\r\n        </CardInfo>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default CloseGroup;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\n\r\nexport const PareButton = () => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <Button\r\n            theme={active ? \"beforesubmit\" : \"aftersubmit\"}\r\n            onClick={() => setActive(!active)}\r\n        >\r\n            <img src={balance} alt=\"\" />\r\n            <span>USDTETH</span>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst CloseGroupModal = ({ handleChange, info }) => {\r\n    const [pareChange, setPareChange] = useState(0);\r\n    const navigate = useNavigate();\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            console.log(toggle);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Копирование трейдера</span>\r\n                </div>\r\n                <div className=\"modal__block__desc opacity\">\r\n                    <span>\r\n                        Вы можете выбрать пары и указать свою сумму, которую\r\n                        будете копировать.\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal__block__line\"></div>\r\n                <CardInfo\r\n                    className=\"modal__block__profit\"\r\n                    name={\"Богдан Богданов\"}\r\n                    email={\"danghoang87hl@gmail.com\"}\r\n                    rating={\"50/50\"}\r\n                    logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                />\r\n                <div className=\"modal__block__line\"></div>\r\n                <div className=\"modal__block__close_group\">\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Дата начала:</span>\r\n                        <p>15.08.2022</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Дата завершения:</span>\r\n                        <p>15.08.2022</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Сумма инвестированная:</span>\r\n                        <p>10 000 USDT</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Результат: </span>\r\n                        <p>+100 %</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>Количество групп:</span>\r\n                        <p>15</p>\r\n                    </div>\r\n                    <div className=\"modal__block__close_group__item\">\r\n                        <span>\r\n                            Средняя прибыль/убыток на каждого инвестора:\r\n                        </span>\r\n                        <p>+ 10 USD</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => {\r\n                            if (isAuth) {\r\n                                hadnleClick(false);\r\n                            } else {\r\n                                navigate(router.login);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Копировать\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseGroupModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport InfoBlock from \"../../components/UI/InfoBlock\";\r\nimport Select from \"@components/Select\";\r\nimport UserLine from \"../../components/UserChart/UserLine\";\r\nimport UserBar from \"../../components/UserChart/UserBar\";\r\nimport UserPie from \"../../components/UserChart/UserPie\";\r\nimport InvestorGroup from \"../../components/InvestorComponents/InvestorGroup\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport SpinnerLoad from \"../../components/SpinnerLoad\";\r\nimport CloseGroup from \"../../components/InvestorComponents/CloseGroup\";\r\nimport {\r\n    getBalance,\r\n    getProfileInfo,\r\n    userActions,\r\n} from \"../../store/user/user.api\";\r\nimport {\r\n    getGroupInfo,\r\n    getTraderDashBoardGroups,\r\n    groupActions,\r\n} from \"../../store/group/group.api\";\r\nimport { useParams } from \"react-router\";\r\nimport InsideGroupModal from \"../../components/Modals/InsideGroupModal\";\r\nimport LeaveGroup from \"../../components/Modals/LeaveGroup\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\nimport CloseGroupModal from \"../../components/Modals/CloseGroupModal\";\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n    {\r\n        id: 2,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n    {\r\n        id: 3,\r\n        first_name: \"User\",\r\n        last_name: \"Example\",\r\n        email: \"userexample@gmail.com\",\r\n        title: \"Test\",\r\n        description: \"Testestestestestestestestest\",\r\n        amount_collected: 200,\r\n        need_sum: 10000,\r\n        start: \"2022-06-10T10:49:13.539Z\",\r\n        end: \"2022-06-10T10:49:13.539Z\",\r\n        status: \"recruited\",\r\n    },\r\n];\r\n\r\nconst UserFirstTab = ({ id }) => {\r\n    const [groupId, setGroupId] = useState();\r\n    const [leaveId, setLeaveId] = useState();\r\n    const [closeId, setCloseId] = useState();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    const { user, isTraider } = useSelector((state) => state.user);\r\n    const { groups, message, complete } = useSelector((state) => state.group);\r\n\r\n    useEffect(() => {\r\n        if (message === \"Вы успешно присоединились\") {\r\n            setGroupId(\"\");\r\n            dispatch(getBalance());\r\n        }\r\n    }, [message]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTraderDashBoardGroups(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__title\">\r\n                <span>РЕЗУЛЬТАТЫ</span>\r\n            </div>\r\n            <div className=\"user_tab__results\">\r\n                <div className=\"user_tab__results__profit\">\r\n                    <InfoBlock\r\n                        label=\"Ежедневно\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Недельный\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"В месяц\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Годовой\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                </div>\r\n                <div className=\"user_tab__results__filter\">\r\n                    <span>Показать за время</span>\r\n                    <Select defaultOption=\"Поледние 24 часа\">\r\n                        <li>jojo</li>\r\n                        <li>jojo</li>\r\n                        <li>jojo</li>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__chart\">\r\n                <UserLine />\r\n            </div>\r\n            <div className=\"user_tab__chart_result\">\r\n                <div className=\"user_tab__chart_result__block\">\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>РЕЗУЛЬТАТЫ</span>\r\n                    </div>\r\n                    <div className=\"select_cont\">\r\n                        <span>Показать за время</span>\r\n                        <Select defaultOption=\"Поледние 24 часа\">\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart\">\r\n                        <UserBar />\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>ТОП 3 СИМВОЛОВ УРОВНЯ ПРОДАЖ</span>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__table\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span>Символ</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span>Уровень продаж</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span>Win рейт</span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span>GMTUSDT</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>362.00 ADA</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>100.00%</span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>НЕДАВНО ПРОДАВАЛИСЬ</span>\r\n                    </div>\r\n                    <ul className=\"user_tab__chart_result__block__list\">\r\n                        <li>\r\n                            NEARUSDT, ADAUSDT, GMTUSDT, BTCUSDT, SOLUSDT,\r\n                            LUNAUSDT\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"user_tab__chart_result__block\">\r\n                    <div className=\"user_tab__chart_result__block__title\">\r\n                        <span>Предпочтение символа</span>\r\n                    </div>\r\n                    <div className=\"select_cont\">\r\n                        <span>Показать за время</span>\r\n                        <Select defaultOption=\"Поледние 24 часа\">\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                            <li>jojo</li>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart_pie\">\r\n                        <UserPie />\r\n                        <span>\r\n                            20.00% <br />\r\n                            BTCUSDT\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"user_tab__chart_result__block__chart_result\">\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"purple\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"pink\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"yellow\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                        <div className=\"chart_result_item\">\r\n                            <i className=\"blue\"></i>\r\n                            <span>GMTUSDT</span>\r\n                            <p>20.00%</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__open_groups\">\r\n                <div className=\"user_tab__open_groups__title\">\r\n                    <span>ОТКРЫТЫЕ ГРУППЫ</span>\r\n                </div>\r\n                <div className=\"user_tab__open_groups__content\">\r\n                    {groups?.open?.length\r\n                        ? groups?.open?.length\r\n                            ? groups?.open.map((e) => (\r\n                                  <InvestorGroup\r\n                                      className=\"open_group_item\"\r\n                                      e={e}\r\n                                      setleavegroupid={(e) => setLeaveId(e)}\r\n                                      setgroupid={(e) => setGroupId(e)}\r\n                                  />\r\n                              ))\r\n                            : \"\"\r\n                        : \"Не найдено\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"user_tab__close_groups\">\r\n                <div className=\"user_tab__open_groups__title\">\r\n                    <span>ЗАКРЫТЫЕ ГРУППЫ</span>\r\n                </div>\r\n                {groups?.close?.length ? (\r\n                    <>\r\n                        <div className=\"user_tab__close_groups__filters\">\r\n                            <div className=\"select_cont\">\r\n                                <span>Показать за время</span>\r\n                                <Select defaultOption=\"Поледние 24 часа\">\r\n                                    <li>jojo</li>\r\n                                    <li>jojo</li>\r\n                                    <li>jojo</li>\r\n                                </Select>\r\n                            </div>\r\n                            <InfoBlock\r\n                                label=\"Количество групп\"\r\n                                value={`15`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label=\"Процент завершенных групп\"\r\n                                value={`0 %`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label=\"Коэфициент прыбльных и убыточных групп\"\r\n                                value={`12 %`}\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                        </div>\r\n                        <div className=\"user_tab__close_groups__content\">\r\n                            {groups ? (\r\n                                groups?.close?.length ? (\r\n                                    data?.close.map((e) => (\r\n                                        <CloseGroup\r\n                                            className=\"close_groups_item\"\r\n                                            e={e}\r\n                                            setgroupid={(e) => setCloseId(e)}\r\n                                        />\r\n                                    ))\r\n                                ) : null\r\n                            ) : (\r\n                                <SpinnerLoad />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    \"Не найдено\"\r\n                )}\r\n            </div>\r\n            {groupId && (\r\n                <InsideGroupModal\r\n                    handleChange={() => setGroupId(\"\")}\r\n                    info={groupId}\r\n                />\r\n            )}\r\n            {closeId && (\r\n                <CloseGroupModal\r\n                    handleChange={() => setCloseId(\"\")}\r\n                    info={closeId}\r\n                />\r\n            )}\r\n            {leaveId && (\r\n                <LeaveGroup\r\n                    info={leaveId}\r\n                    handleChange={() => setLeaveId(\"\")}\r\n                />\r\n            )}\r\n            {message\r\n                ? Object.values(message).map((e) => (\r\n                      <MessageBox message={e} error={true} />\r\n                  ))\r\n                : null}\r\n            {complete ? <MessageBox message={complete} error={false} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserFirstTab;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@components/Button\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOpenTrades } from \"../../store/group/group.api\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\n\r\nconst UserSecondTab = ({ id }) => {\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const [filter, setFilter] = useState(\"days\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { groups, message, complete } = useSelector((state) => state.group);\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getOpenTrades(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__btns\">\r\n                <Button\r\n                    className={filter === \"days\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"days\")}\r\n                >\r\n                    Дни\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"week\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"week\")}\r\n                >\r\n                    Неделя\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"month\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"month\")}\r\n                >\r\n                    Месяц\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"threemonth\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"threemonth\")}\r\n                >\r\n                    Три месяца\r\n                </Button>\r\n            </div>\r\n            <div className=\"user_tab__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span>Символ</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Размер</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена входа</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена маркировки</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена ликвидации</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Маржа</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>PNL(ROE%)</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 18 }).map((e) => (\r\n                            <tr>\r\n                                <td className=\"simbol green_left_border\">\r\n                                    <div>\r\n                                        <span>GMTUSDT</span>\r\n                                        <p>Бессрочный</p>\r\n                                    </div>\r\n                                    <icon>11x</icon>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>18.35939 USDT</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td className=\"yellow\">\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td className=\"marga\">\r\n                                    <span>2.35 USDT</span>\r\n                                    <p>(Кросс)</p>\r\n                                </td>\r\n                                <td className=\"red_text\">\r\n                                    <span>GMTUSDT</span>\r\n                                    <p>(-5.23% +10 USDT)</p>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"user_tab__mobile_table\">\r\n                {Array.from({ length: 18 }).map((e, idx) => (\r\n                    <div className=\"user_tab__mobile_table__card\" key={idx + 1}>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Символ</span>\r\n                            </div>\r\n                            <div className=\"line__desc simbol\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>Бессрочный</p>\r\n                                <icon>11x</icon>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Размер</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>18.35939 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена входа</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена маркировки</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена ликвидации</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Маржа</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35 USDT</span>\r\n                                <p>(Кросс)</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>PNL(ROE%)</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>(-5.23% +10 USDT)</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"user_tab__paginate\">\r\n                <ReactPaginate\r\n                    className=\"react-paginate\"\r\n                    breakLabel=\"...\"\r\n                    nextLabel=\">\"\r\n                    onPageChange={handlePageClick}\r\n                    pageRangeDisplayed={4}\r\n                    pageCount={50}\r\n                    previousLabel=\"<\"\r\n                    renderOnZeroPageCount={null}\r\n                />\r\n            </div>\r\n            {message\r\n                ? Object.values(message).map((e) => (\r\n                      <MessageBox message={e[0]} error={true} />\r\n                  ))\r\n                : null}\r\n            {complete ? <MessageBox message={complete} error={false} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSecondTab;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@components/Button\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTraderHistpry } from \"../../store/group/group.api\";\r\n\r\nconst UserThirdTab = ({ id }) => {\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const [filter, setFilter] = useState(\"days\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getTraderHistpry(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user_tab\">\r\n            <div className=\"user_tab__btns\">\r\n                <Button\r\n                    className={filter === \"days\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"days\")}\r\n                >\r\n                    Дни\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"week\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"week\")}\r\n                >\r\n                    Неделя\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"month\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"month\")}\r\n                >\r\n                    Месяц\r\n                </Button>\r\n                <Button\r\n                    className={filter === \"threemonth\" ? \"active\" : \"noactive\"}\r\n                    theme=\"aftersubmit\"\r\n                    onClick={() => setFilter(\"threemonth\")}\r\n                >\r\n                    Три месяца\r\n                </Button>\r\n            </div>\r\n            <div className=\"user_tab__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span>Время</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Тикер</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Сторона</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Цена</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Количество</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Комиссия</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>Реализованная прибыль</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 18 }).map((e) => (\r\n                            <tr>\r\n                                <td>\r\n                                    <span>2022-04-18 16:28:39</span>\r\n                                </td>\r\n                                <td className=\"simbol\">\r\n                                    <div>\r\n                                        <span>GMTUSDT</span>\r\n                                        <p>Бессрочный</p>\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"green\">\r\n                                    <span>Открыть лонг</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>2.35939</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                                <td className=\"marga\">\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>0.00471877 USD</span>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"user_tab__mobile_table\">\r\n                {Array.from({ length: 18 }).map((e, idx) => (\r\n                    <div className=\"user_tab__mobile_table__card\" key={idx + 1}>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Время</span>\r\n                            </div>\r\n                            <div className=\"line__desc simbol\">\r\n                                <span>2022-04-18 16:28:39</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Тикер</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>GMTUSDT</span>\r\n                                <p>Бессрочный</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Сторона</span>\r\n                            </div>\r\n                            <div className=\"line__desc green\">\r\n                                <span>Открыть лонг</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Цена</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>2.35939</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Количество</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>11.79695 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Комиссия</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>0.00471877 USDT</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user_tab__mobile_table__card__line\">\r\n                            <div className=\"line__title\">\r\n                                <span>Реализованная прибыль</span>\r\n                            </div>\r\n                            <div className=\"line__desc\">\r\n                                <span>0.00471877</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"user_tab__paginate\">\r\n                <ReactPaginate\r\n                    className=\"react-paginate\"\r\n                    breakLabel=\"...\"\r\n                    nextLabel=\">\"\r\n                    onPageChange={handlePageClick}\r\n                    pageRangeDisplayed={4}\r\n                    pageCount={50}\r\n                    previousLabel=\"<\"\r\n                    renderOnZeroPageCount={null}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserThirdTab;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 19,\n    viewBox: \"0 0 19 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.7695 6.05859L17.7969 6.79688C18.2188 6.86719 18.5703 7.14844 18.7109 7.57031C18.8516 7.95703 18.7461 8.41406 18.4297 8.69531L14.7734 12.3164L15.6523 17.4492C15.7227 17.8711 15.5469 18.293 15.1953 18.5391C14.8438 18.8203 14.3867 18.8203 14 18.6445L9.5 16.2188L4.96484 18.6445C4.61328 18.8203 4.12109 18.8203 3.80469 18.5391C3.45312 18.293 3.27734 17.8711 3.34766 17.4492L4.19141 12.3164L0.535156 8.69531C0.21875 8.41406 0.113281 7.95703 0.253906 7.57031C0.394531 7.14844 0.746094 6.86719 1.16797 6.79688L6.23047 6.05859L8.48047 1.38281C8.65625 0.996094 9.04297 0.75 9.5 0.75C9.92188 0.75 10.3086 0.996094 10.4844 1.38281L12.7695 6.05859Z\",\n    fill: \"#FF7A00\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.169837a523c8997afb561e6eabc2373c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStarBorder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 27,\n    viewBox: \"0 0 28 27\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.949 22.3906L6.99199 26.1484C6.58574 26.3516 6.12871 26.3008 5.72246 26.0469C5.36699 25.793 5.16387 25.2852 5.21465 24.8281L6.58574 16.957L0.949023 11.3711C0.593554 11.0156 0.491992 10.5586 0.644336 10.1016C0.796679 9.69531 1.15215 9.33984 1.60918 9.28906L9.37871 8.12109L12.8826 0.960938C13.0857 0.554688 13.492 0.25 13.949 0.25C14.4568 0.25 14.8631 0.554688 15.0662 0.960938L18.5701 8.12109L26.3396 9.28906C26.7967 9.33984 27.1521 9.69531 27.3045 10.1016C27.4568 10.5586 27.3553 11.0156 26.9998 11.3711L21.3631 16.957L22.6834 24.8281C22.785 25.2852 22.5818 25.793 22.2264 26.0469C21.8201 26.3008 21.3123 26.3516 20.9061 26.1484L13.949 22.3906ZM10.1404 8.47656C9.98809 8.73047 9.78496 8.88281 9.53105 8.93359L1.71074 10.1016C1.5584 10.1016 1.45684 10.2031 1.40605 10.3555C1.35527 10.5078 1.40605 10.6602 1.50762 10.7617L7.14434 16.3477C7.34746 16.5508 7.39824 16.8047 7.39824 17.0586L6.02715 24.9805C6.02715 25.1328 6.07793 25.2852 6.17949 25.3867C6.33184 25.4883 6.48418 25.4883 6.63652 25.3867L13.5936 21.6797C13.8475 21.5781 14.1014 21.5781 14.3553 21.6797L21.3123 25.3867C21.4646 25.4883 21.617 25.4883 21.7186 25.3867C21.8709 25.2852 21.9217 25.1328 21.9217 24.9805L20.5506 17.0586C20.4998 16.8047 20.6014 16.5508 20.8045 16.3477L26.4412 10.7617C26.5428 10.6602 26.5936 10.5078 26.5428 10.3555C26.492 10.2031 26.3904 10.1016 26.2381 10.1016L18.4178 8.93359C18.1639 8.88281 17.9607 8.73047 17.8084 8.47656L14.3553 1.31641C14.2537 1.16406 14.1014 1.0625 13.949 1.0625C13.7967 1.0625 13.6951 1.16406 13.5936 1.31641L10.1404 8.47656ZM0.949023 11.3711L1.50762 10.7617L0.949023 11.3711Z\",\n    fill: \"#FF7A00\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStarBorder);\nexport default __webpack_public_path__ + \"static/media/starBorder.90f456216910edeef263ce1942dc8d4e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\n\r\n//Icons\r\nimport star from \"@assets/img/star.svg\";\r\nimport starBorder from \"@assets/img/starBorder.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst StartClick = () => {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    return (\r\n        <img\r\n            src={toggle ? star : starBorder}\r\n            alt=\"\"\r\n            onClick={() => setToggle(!toggle)}\r\n        />\r\n    );\r\n};\r\n\r\nconst EstimateModal = ({ handleChange, info }) => {\r\n    const [starArr, setToggle] = useState(info);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            handleChange(starArr);\r\n        } else {\r\n            handleChange(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>ОЦЕНИТЬ ТРЕЙДЕРА</span>\r\n                </div>\r\n                <div className=\"modal__block__estimate\">\r\n                    {Array.from({ length: 10 }).map((e, idx) => (\r\n                        <img\r\n                            src={starArr >= idx + 1 ? star : starBorder}\r\n                            alt={idx}\r\n                            onClick={() => setToggle(idx + 1)}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                    <Button\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отменить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EstimateModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport UserInfoBlock from \"../../components/UI/UserInfoBlock\";\r\nimport InfoBlock from \"../../components/UI/InfoBlock\";\r\nimport Button from \"@components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\n\r\n//Styles\r\nimport \"./User.scss\";\r\nimport UserFirstTab from \"./UserFirstTab\";\r\nimport UserSecondTab from \"./UserSecondTab\";\r\nimport UserThirtTab from \"./UserThirtTab\";\r\nimport CopyTradeModal from \"../../components/Modals/CopyTradeModal\";\r\nimport FreePlaceModal from \"../../components/Modals/FreePlaceModal\";\r\nimport {\r\n    changeRate,\r\n    getProfileInfo,\r\n    userActions,\r\n} from \"../../store/user/user.api\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport EstimateModal from \"../../components/Modals/EstimateModal\";\r\nimport SpinnerLoad from \"../../components/SpinnerLoad\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\nimport router from \"../../utils/router\";\r\n\r\nconst User = () => {\r\n    const [copyTradeId, setCopyTradeId] = useState();\r\n    const [freePlaceChange, setFreePlaceChange] = useState();\r\n    const [tab, setTab] = useState(0);\r\n    const [renderBlock, setRenderBlock] = useState();\r\n    const [estimate, setEstimate] = useState(false);\r\n\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n    const { user, isTraider, profile, complete, messages } = useSelector(\r\n        (state) => state.user\r\n    );\r\n    const { groups } = useSelector((state) => state.group);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileInfo(params.id));\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(userActions.message(\"\"));\r\n    }, []);\r\n\r\n    const getTab = () => {\r\n        switch (tab) {\r\n            case 0:\r\n                setRenderBlock(<UserFirstTab id={params.id} />);\r\n                break;\r\n            case 1:\r\n                setRenderBlock(<UserSecondTab id={params.id} />);\r\n                break;\r\n            case 2:\r\n                setRenderBlock(<UserThirtTab id={params.id} />);\r\n                break;\r\n            default:\r\n                setRenderBlock(<UserFirstTab id={params.id} />);\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTab();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getTab();\r\n    }, [tab]);\r\n\r\n    const estimateChange = (data) => {\r\n        if (data && isAuth) {\r\n            dispatch(changeRate(params.id, data));\r\n        } else {\r\n            navigate(router.login);\r\n        }\r\n        setEstimate(false);\r\n    };\r\n\r\n    return profile ? (\r\n        <div className=\"main\">\r\n            <div className=\"main__header\">\r\n                <div className=\"main__header__title\">\r\n                    <UserInfoBlock\r\n                        email={profile?.user?.email}\r\n                        name={`${profile?.user?.first_name} ${profile?.user?.last_name}`}\r\n                        logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                    />\r\n                </div>\r\n                <div className=\"main__header__desc\">\r\n                    <span>\r\n                        ОЦЕНКА: {profile?.rate}/10{\" \"}\r\n                        <svg\r\n                            width=\"19\"\r\n                            height=\"19\"\r\n                            viewBox=\"0 0 19 19\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M12.7695 6.05859L17.7969 6.79688C18.2188 6.86719 18.5703 7.14844 18.7109 7.57031C18.8516 7.95703 18.7461 8.41406 18.4297 8.69531L14.7734 12.3164L15.6523 17.4492C15.7227 17.8711 15.5469 18.293 15.1953 18.5391C14.8438 18.8203 14.3867 18.8203 14 18.6445L9.5 16.2188L4.96484 18.6445C4.61328 18.8203 4.12109 18.8203 3.80469 18.5391C3.45312 18.293 3.27734 17.8711 3.34766 17.4492L4.19141 12.3164L0.535156 8.69531C0.21875 8.41406 0.113281 7.95703 0.253906 7.57031C0.394531 7.14844 0.746094 6.86719 1.16797 6.79688L6.23047 6.05859L8.48047 1.38281C8.65625 0.996094 9.04297 0.75 9.5 0.75C9.92188 0.75 10.3086 0.996094 10.4844 1.38281L12.7695 6.05859Z\"\r\n                                fill=\"#FF7A00\"\r\n                            />\r\n                        </svg>\r\n                    </span>\r\n                    <Button\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => setEstimate(true)}\r\n                    >\r\n                        Оценить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main__user_content\">\r\n                <div className=\"main__user_content__desc\">\r\n                    <p>Controlling the risk is my key principle for trading</p>\r\n                </div>\r\n                <div className=\"main__user_content__profit\">\r\n                    <InfoBlock\r\n                        label=\"Общий ROI\"\r\n                        value={`${profile?.roi_statistic} %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Общий PNL\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Общий MDD\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Продажи за 7 дней\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Вин рейт 30D\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Мин.сумма копии\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                    <InfoBlock\r\n                        label=\"Копи трейдеров\"\r\n                        value={`0 %`}\r\n                        vWeigth=\"700\"\r\n                        color=\"green\"\r\n                        opactityLabel\r\n                    />\r\n                </div>\r\n                <div className=\"main__user_content__copyinfo\">\r\n                    <div className=\"main__user_content__copyinfo__title\">\r\n                        <p>Продолжительность: 36 дней</p>\r\n                        <p>\r\n                            MDD и Win Rate обновляются ежедневно в 03:00 UTC,\r\n                            все остальные данные обновляются ежечасно.\r\n                        </p>\r\n                    </div>\r\n                    <Button\r\n                        theme=\"beforesubmit\"\r\n                        onClick={() => setCopyTradeId(params.id)}\r\n                    >\r\n                        Копировать\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"main__user_content__tabs\">\r\n                    <ul className=\"main__user_content__tabs__links\">\r\n                        <li\r\n                            onClick={() => setTab(0)}\r\n                            className={tab === 0 && \"active\"}\r\n                        >\r\n                            Статистика\r\n                        </li>\r\n                        <li\r\n                            onClick={() => setTab(1)}\r\n                            className={tab === 1 && \"active\"}\r\n                        >\r\n                            Открытые сделки\r\n                        </li>\r\n                        <li\r\n                            onClick={() => setTab(2)}\r\n                            className={tab === 2 && \"active\"}\r\n                        >\r\n                            История сделок\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"main__user_content__tabs__block\">\r\n                        {renderBlock}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {copyTradeId && (\r\n                <CopyTradeModal\r\n                    handleChange={() => setCopyTradeId(\"\")}\r\n                    info={copyTradeId}\r\n                />\r\n            )}\r\n            {freePlaceChange && (\r\n                <FreePlaceModal\r\n                    handleChange={() => setFreePlaceChange(\"\")}\r\n                    info={freePlaceChange}\r\n                />\r\n            )}\r\n            {estimate && (\r\n                <EstimateModal\r\n                    handleChange={(e) => estimateChange(e)}\r\n                    info={profile?.rate}\r\n                />\r\n            )}\r\n            {messages\r\n                ? Object.values(messages).map((e) => (\r\n                      <MessageBox message={e} error={true} />\r\n                  ))\r\n                : null}\r\n            {complete ? <MessageBox message={complete} error={false} /> : null}\r\n        </div>\r\n    ) : (\r\n        <SpinnerLoad />\r\n    );\r\n};\r\n\r\nexport default User;\r\n"],"names":["PareButton","useState","active","setActive","theme","onClick","src","balance","alt","handleChange","info","check","setCheck","modalTab","setModalTab","navigate","useNavigate","isAuth","useSelector","state","auth","hadnleClick","toggle","console","log","className","name","email","rating","logo","label","value","fontSize","color","vWeigth","opactityLabel","Array","from","length","map","e","idx","min","max","onChange","id","checked","target","href","router","setEmail","useValidator","setError","errorData","fields","error","validator","btnRef","useRef","registerHandler","preventDefault","isEmailValid","onSubmit","noValidate","autoComplete","classNames","disabled","hasInvalidFields","ref","type","children","defaultOption","open","setOpen","select","setSelect","document","addEventListener","localName","innerText","useEffect","arrow","emailRegEx","phoneRegEx","nameRegEx","passwordRegEx","password","password_confirm","phone","firstName","secondName","setErrorData","setErrorFor","errorField","valid","errorMsg","prev","isValid","what","regex","test","isPhoneValid","isFirstNameValid","checkIfFirstLetterInLowerCase","isSecondNameValid","isPasswordValid","Object","values","find","f","isPasswordConfirmValid","confirm_password","CustomizedDot","props","cx","cy","x","y","width","height","viewBox","fill","xmlns","r","stroke","data","setData","d","i","push","ROI","Math","round","random","ResponsiveContainer","aspect","AreaChart","margin","top","x1","y1","x2","y2","offset","stopColor","stopOpacity","Tooltip","cursor","XAxis","dataKey","YAxis","padding","bottom","Legend","Area","strokeWidth","activeDot","BarChart","barSize","scale","left","right","dx","Bar","radius","COLORS","Tip","setShowTooltip","rest","React","payload","setPayload","onMouseLeave","onMouseMove","stopPropagation","style","background","borderRadius","boxShadow","showTooltip","PieChart","Pie","onMouseEnter","innerRadius","outerRadius","entry","index","Cell","content","wrapperStyle","visibility","pointerEvents","zIndex","setgroupid","clean_group","useDispatch","readMore","setReadMore","CardInfo","first_name","last_name","end","title","description","split","SpinnerLoad","amount_collected","need_sum","start","status","groupId","setGroupId","leaveId","setLeaveId","closeId","setCloseId","dispatch","useParams","user","isTraider","group","groups","message","complete","getBalance","getTraderDashBoardGroups","InfoBlock","Select","InvestorGroup","setleavegroupid","close","InsideGroupModal","LeaveGroup","MessageBox","setItemOffset","filter","setFilter","getOpenTrades","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","getTraderHistpry","starArr","setToggle","star","starBorder","copyTradeId","setCopyTradeId","freePlaceChange","setFreePlaceChange","tab","setTab","renderBlock","setRenderBlock","estimate","setEstimate","profile","messages","params","getProfileInfo","userActions","getTab","UserThirtTab","UserInfoBlock","rate","roi_statistic","CopyTradeModal","FreePlaceModal","changeRate","estimateChange"],"sourceRoot":""}
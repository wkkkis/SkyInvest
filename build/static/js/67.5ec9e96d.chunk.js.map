{"version":3,"file":"static/js/67.5ec9e96d.chunk.js","mappings":"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","sources":["components/Checkbox/index.js","assets/img/keyactive.svg","components/Forms/LoginForm/index.js","components/Radio/index.js","components/Forms/SigninForm/index.js","components/Forms/VisaPaymentForm/index.js","components/Forms/USDTForm/index.js","components/Forms/CashForm/index.js","components/Forms/ResetPasswordForm/index.js","components/Forms/NewPassword/index.js","components/Forms/ActivationForm/index.js","components/Modals/AgreeModal.js","components/Select/index.js","utils/regex.js","hooks/useValidator.js"],"sourcesContent":["import React from \"react\";\r\n\r\n//Styles\r\nimport \"./Checkbox.scss\";\r\n\r\nconst Checkbox = ({ id, group, value, label, onClick, ...props }) => {\r\n    return (\r\n        <div className=\"custom_checkbox\" onClick={onClick}>\r\n            <input type=\"checkbox\" id={id} name={group} {...props} />\r\n            <label for={id}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgKeyactive(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.21094 9.65625L7.28125 10.5586C7.17188 10.6953 7.00781 10.75 6.84375 10.75H5.75V11.8438C5.75 12.2266 5.44922 12.5 5.09375 12.5H4V13.5938C4 13.9766 3.69922 14.25 3.34375 14.25H1.15625C0.773438 14.25 0.5 13.9766 0.5 13.5938V11.4062C0.5 11.2422 0.554688 11.0781 0.691406 10.9414L5.09375 6.53906C4.92969 6.07422 4.875 5.58203 4.875 5.0625C4.875 2.41016 7.00781 0.25 9.6875 0.25C12.3398 0.25 14.5 2.41016 14.5 5.0625C14.5 7.74219 12.3398 9.875 9.6875 9.875C9.16797 9.875 8.67578 9.82031 8.21094 9.65625ZM10.7812 5.0625C11.3828 5.0625 11.875 4.59766 11.875 3.96875C11.875 3.36719 11.3828 2.875 10.7812 2.875C10.1523 2.875 9.6875 3.36719 9.6875 3.96875C9.6875 4.59766 10.1523 5.0625 10.7812 5.0625Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKeyactive);\nexport default __webpack_public_path__ + \"static/media/keyactive.d28263090f94c7a03516b65ea9dab929.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Icons\r\nimport logo from \"@assets/img/logo.svg\";\r\nimport key from \"@assets/img/keyactive.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Checkbox from \"@components/Checkbox\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\n\r\n//Router\r\nimport router from \"@utils/router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginForm = ({ fetchData, error, loaded }) => {\r\n    const navigate = useNavigate();\r\n    const [confirm, setConfirm] = useState(false);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    const handleCheckbox = () => {\r\n        setConfirm(!confirm);\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        fetchData(data);\r\n    };\r\n\r\n    const showEmailError = () => {\r\n        switch (errors.email && errors.email.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const showPasswordError = () => {\r\n        switch (errors.password && errors.password.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>ВХОД</span>\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Field\r\n                    label=\"Email\"\r\n                    {...register(\"email\", { required: true, maxLength: 50 })}\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.email && (\r\n                    <span className=\"form__error\">{showEmailError()}</span>\r\n                )}\r\n                <Field\r\n                    label=\"Пароль\"\r\n                    {...register(\"password\", {\r\n                        required: true,\r\n                        maxLength: 50,\r\n                    })}\r\n                    type=\"password\"\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.password && (\r\n                    <span className=\"form__error\">{showPasswordError()}</span>\r\n                )}\r\n                {error ? <span className=\"form__error\">{error}</span> : null}\r\n                <div className=\"form__confirm\">\r\n                    {/* <Checkbox\r\n                        onClick={handleCheckbox}\r\n                        id=\"register_confirm\"\r\n                        group=\"register_confirm\"\r\n                        label={`Я принимаю условия`}\r\n                        {...register(\"confirm\")}\r\n                    /> */}\r\n                    <Link to={router.reset_password}>Забыл пароль</Link>\r\n                </div>\r\n\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                    disabled={loaded}\r\n                >\r\n                    <img src={key} alt=\"key\" />\r\n                    {loaded ? <SpinnerLoad /> : \"АВТОРИЗОВАТЬСЯ\"}\r\n                </Button>\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"aftersubmit\"}\r\n                    onClick={() => navigate(router.signin)}\r\n                >\r\n                    Зарегистрироваться\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./Radio.scss\";\r\n\r\nconst Radio = ({ id, group, value, checked, label, onClick, ...props }) => {\r\n    return (\r\n        <div class=\"custom_radio\" onClick={onClick}>\r\n            <input\r\n                type=\"radio\"\r\n                id={id}\r\n                name={group}\r\n                checked={checked}\r\n                {...props}\r\n            />\r\n            <label for={id}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Radio;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Icons\r\nimport logo from \"@assets/img/logo.svg\";\r\nimport key from \"@assets/img/keyactive.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\nimport Checkbox from \"../../Checkbox\";\r\nimport { useValidator } from \"../../../hooks/useValidator\";\r\nimport Radio from \"../../Radio\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AgreeModal from \"../../Modals/AgreeModal\";\r\n\r\nconst SigninForm = ({ fetchData }) => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [secondName, setSecondName] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [role, setRole] = useState(false);\r\n    const [phone, setPhone] = useState(\"+7\");\r\n    const [agree, setAgree] = useState(false);\r\n    const {\r\n        setError,\r\n        errorData: { fields, error },\r\n        ...validator\r\n    } = useValidator();\r\n    const { messages, loaded } = useSelector((state) => state.user);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const handleCheckbox = (e) => {\r\n        setConfirm(e.target.checked);\r\n    };\r\n\r\n    const handleRole = (toggle) => {\r\n        setRole(toggle);\r\n    };\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    let btnRef = useRef([]);\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validator.isPhoneValid(phone)) {\r\n            return;\r\n        }\r\n        if (!validator.isEmailValid(email)) {\r\n            return;\r\n        }\r\n        if (!validator.isFirstNameValid(firstName)) {\r\n            return;\r\n        }\r\n        if (!validator.isSecondNameValid(secondName)) {\r\n            return;\r\n        }\r\n        if (!validator.isPasswordValid(password, 8)) {\r\n            return;\r\n        }\r\n        if (!validator.isPasswordConfirmValid(password, 8, confirmPassword)) {\r\n            return;\r\n        }\r\n\r\n        if (!confirm) {\r\n            setAgree(true);\r\n        } else {\r\n            const body = {\r\n                email,\r\n                password,\r\n                first_name: firstName,\r\n                last_name: secondName,\r\n                phone_number: phone,\r\n                is_trader: role,\r\n            };\r\n\r\n            fetchData(body);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>РЕГИСТРАЦИЯ</span>\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <form\r\n                onSubmit={(e) => registerHandler(e)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <div className=\"form__confirm\">\r\n                    <Radio\r\n                        id=\"traider_radio\"\r\n                        group=\"role_change\"\r\n                        label=\"Инвестор\"\r\n                        checked={!role}\r\n                        onClick={() => handleRole(false)}\r\n                    />\r\n                    <Radio\r\n                        id=\"investor_radio\"\r\n                        group=\"role_change\"\r\n                        label=\"Трейдер\"\r\n                        checked={role}\r\n                        onClick={() => handleRole(true)}\r\n                    />\r\n                </div>\r\n                <Field\r\n                    name=\"first_name\"\r\n                    label=\"Имя\"\r\n                    classNames={`${fields.firstName && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isFirstNameValid(e.target.value);\r\n                        setFirstName(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.firstName && (\r\n                    <span className=\"form__error\">{error}</span>\r\n                )}\r\n                <Field\r\n                    name=\"last_name\"\r\n                    label=\"Фамилия\"\r\n                    classNames={`${fields.secondName && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isSecondNameValid(e.target.value);\r\n                        setSecondName(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.secondName && (\r\n                    <span className=\"form__error\">{error}</span>\r\n                )}\r\n                <Field\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    classNames={`${fields.email && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isEmailValid(e.target.value);\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.email && <span className=\"form__error\">{error}</span>}\r\n                <Field\r\n                    name=\"phone\"\r\n                    label=\"Телефон\"\r\n                    type=\"number\"\r\n                    classNames={`${fields.phone && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isPhoneValid(e.target.value);\r\n                        setPhone(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.phone && <span className=\"form__error\">{error}</span>}\r\n                <Field\r\n                    name=\"password\"\r\n                    label=\"Пароль\"\r\n                    type=\"password\"\r\n                    classNames={`${fields.password && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isPasswordValid(e.target.value, 4);\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.password && (\r\n                    <span className=\"form__error\">{error}</span>\r\n                )}\r\n                <Field\r\n                    name=\"confirm_password\"\r\n                    label=\"Повторите пароль\"\r\n                    type=\"password\"\r\n                    classNames={`${fields.password_confirm && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isPasswordConfirmValid(\r\n                            password,\r\n                            8,\r\n                            e.target.value\r\n                        );\r\n                        setConfirmPassword(e.target.value);\r\n                    }}\r\n                />\r\n                {fields.password_confirm && (\r\n                    <span className=\"form__error\">{error}</span>\r\n                )}\r\n                <div className=\"form__confirm\">\r\n                    <Checkbox\r\n                        checked={confirm}\r\n                        onChange={handleCheckbox}\r\n                        id=\"register_confirm\"\r\n                        group=\"register_confirm\"\r\n                        label={`Я принимаю условия`}\r\n                    />\r\n                    <a href=\"#\">соглашения</a>\r\n                </div>\r\n                <Button\r\n                    disabled={validator.hasInvalidFields() || loaded}\r\n                    ref={btnRef}\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                >\r\n                    <img src={key} alt=\"key\" />\r\n                    {loaded ? <SpinnerLoad /> : \"ЗАРЕГИСТРИРОВАТЬСЯ\"}\r\n                </Button>\r\n                {agree && (\r\n                    <AgreeModal\r\n                        handleChange={() => {\r\n                            setConfirm(true);\r\n                            setAgree(false);\r\n                        }}\r\n                    />\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SigninForm;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\nimport \"./VisaPaymentForm.scss\";\r\n\r\nconst VisaPaymentForm = ({ fetchData }) => {\r\n    const [loaded, setLoaded] = useState(true);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        setLoaded(false);\r\n\r\n        fetchData(data);\r\n\r\n        setLoaded(true);\r\n    };\r\n\r\n    const showCashError = () => {\r\n        switch (errors.cash && errors.cash.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше\";\r\n            case \"required\":\r\n                return \"Поле сумма пополнения обязательна\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>VISA/MasterCard</span>\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Field\r\n                    label=\"Сумма пополнения\"\r\n                    type=\"usd\"\r\n                    {...register(\"cash\", {\r\n                        required: true,\r\n                        minLength: 2,\r\n                        maxLength: 5,\r\n                    })}\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.cash && (\r\n                    <span className=\"form__error\">{showCashError()}</span>\r\n                )}\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                >\r\n                    {!loaded ? (\r\n                        <SpinnerLoad />\r\n                    ) : (\r\n                        <>\r\n                            <svg\r\n                                width=\"24\"\r\n                                height=\"25\"\r\n                                viewBox=\"0 0 24 25\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    opacity=\"1\"\r\n                                    d=\"M10.9219 15.0781C11.4844 15.6875 12.4688 15.6875 13.0312 15.0781L17.5312 10.5781C18.1406 10.0156 18.1406 9.03125 17.5312 8.46875C16.9688 7.85938 15.9844 7.85938 15.4219 8.46875L13.5 10.3906V2C13.5 1.20312 12.7969 0.5 12 0.5C11.1562 0.5 10.5 1.20312 10.5 2V10.3906L8.53125 8.46875C8.25 8.1875 7.875 8 7.5 8C7.07812 8 6.70312 8.1875 6.42188 8.46875C5.8125 9.03125 5.8125 10.0156 6.42188 10.5781L10.9219 15.0781ZM22.5 15.5H18L16.5 18.5H7.5L6 15.5H1.5C0.65625 15.5 0 16.2031 0 17V22.25C0 23.5156 0.984375 24.5 2.25 24.5H21.75C22.9688 24.5 24 23.5156 24 22.25V17C24 16.2031 23.2969 15.5 22.5 15.5Z\"\r\n                                    fill=\"white\"\r\n                                />\r\n                            </svg>\r\n\r\n                            <span>Пополнить баланс</span>\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisaPaymentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Select from \"../../Select\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\nimport \"./USDT.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    ustdConfirm,\r\n    ustdDeposit,\r\n    ustdPayment,\r\n} from \"../../../store/payment/pay.api\";\r\nimport MessageBox from \"../../MessageBox\";\r\n\r\nconst USDTForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [error, setError] = useState(false);\r\n    const [complateText, setComplate] = useState(false);\r\n    const { usdt_for_pay, message, loaded, complete, confirm } = useSelector(\r\n        (state) => state.pay\r\n    );\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        dispatch(ustdDeposit({ tx_id: data.usdt }));\r\n    };\r\n\r\n    const showCashError = () => {\r\n        switch (errors.cash && errors.cash.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше\";\r\n            case \"required\":\r\n                return \"Поле сумма пополнения обязательна\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(ustdPayment());\r\n    }, []);\r\n\r\n    const onConfirmClick = () => {\r\n        dispatch(ustdConfirm());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            setError(true);\r\n        }\r\n        if (confirm === \"usdt_active\") {\r\n            setComplate(true);\r\n        }\r\n    }, [message, confirm]);\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>USDT сеть TRC20</span>\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                {complateText && (\r\n                    <Field\r\n                        label=\"Tx Id\"\r\n                        type=\"money\"\r\n                        {...register(\"usdt\", {\r\n                            required: true,\r\n                            minLength: 2,\r\n                            maxLength: 50,\r\n                        })}\r\n                        error={errors.usdt && \"Поле обязательна\"}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                )}\r\n                {usdt_for_pay && (\r\n                    <>\r\n                        <span>\r\n                            Отправьте желаемую сумму в USDT на нащ кошелек\r\n                        </span>\r\n                        <span className=\"usdt_key\">{usdt_for_pay.address}</span>\r\n                    </>\r\n                )}\r\n                {errors.cash && (\r\n                    <span className=\"form__error\">{showCashError()}</span>\r\n                )}\r\n                {complateText && (\r\n                    <Button\r\n                        className=\"form__button\"\r\n                        theme={\"beforesubmit\"}\r\n                        type=\"submit\"\r\n                    >\r\n                        {loaded ? (\r\n                            <SpinnerLoad />\r\n                        ) : (\r\n                            <>\r\n                                <svg\r\n                                    width=\"24\"\r\n                                    height=\"25\"\r\n                                    viewBox=\"0 0 24 25\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        opacity=\"1\"\r\n                                        d=\"M10.9219 15.0781C11.4844 15.6875 12.4688 15.6875 13.0312 15.0781L17.5312 10.5781C18.1406 10.0156 18.1406 9.03125 17.5312 8.46875C16.9688 7.85938 15.9844 7.85938 15.4219 8.46875L13.5 10.3906V2C13.5 1.20312 12.7969 0.5 12 0.5C11.1562 0.5 10.5 1.20312 10.5 2V10.3906L8.53125 8.46875C8.25 8.1875 7.875 8 7.5 8C7.07812 8 6.70312 8.1875 6.42188 8.46875C5.8125 9.03125 5.8125 10.0156 6.42188 10.5781L10.9219 15.0781ZM22.5 15.5H18L16.5 18.5H7.5L6 15.5H1.5C0.65625 15.5 0 16.2031 0 17V22.25C0 23.5156 0.984375 24.5 2.25 24.5H21.75C22.9688 24.5 24 23.5156 24 22.25V17C24 16.2031 23.2969 15.5 22.5 15.5Z\"\r\n                                        fill=\"white\"\r\n                                    />\r\n                                </svg>\r\n\r\n                                <span>Продолжить</span>\r\n                            </>\r\n                        )}\r\n                    </Button>\r\n                )}\r\n            </form>\r\n            {!complateText && (\r\n                <Button\r\n                    onClick={onConfirmClick}\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                >\r\n                    {loaded ? (\r\n                        <SpinnerLoad />\r\n                    ) : (\r\n                        <>\r\n                            <svg\r\n                                width=\"24\"\r\n                                height=\"25\"\r\n                                viewBox=\"0 0 24 25\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    opacity=\"1\"\r\n                                    d=\"M10.9219 15.0781C11.4844 15.6875 12.4688 15.6875 13.0312 15.0781L17.5312 10.5781C18.1406 10.0156 18.1406 9.03125 17.5312 8.46875C16.9688 7.85938 15.9844 7.85938 15.4219 8.46875L13.5 10.3906V2C13.5 1.20312 12.7969 0.5 12 0.5C11.1562 0.5 10.5 1.20312 10.5 2V10.3906L8.53125 8.46875C8.25 8.1875 7.875 8 7.5 8C7.07812 8 6.70312 8.1875 6.42188 8.46875C5.8125 9.03125 5.8125 10.0156 6.42188 10.5781L10.9219 15.0781ZM22.5 15.5H18L16.5 18.5H7.5L6 15.5H1.5C0.65625 15.5 0 16.2031 0 17V22.25C0 23.5156 0.984375 24.5 2.25 24.5H21.75C22.9688 24.5 24 23.5156 24 22.25V17C24 16.2031 23.2969 15.5 22.5 15.5Z\"\r\n                                    fill=\"white\"\r\n                                />\r\n                            </svg>\r\n\r\n                            <span>Оплатил</span>\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default USDTForm;\r\n","import React, { useState } from \"react\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Select from \"@components/Select\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\nimport \"./CashForm.scss\";\r\n\r\nconst CashForm = ({ fetchData, loaded }) => {\r\n    const [valute, setValute] = useState(\"USD\");\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const getValuteSelect = (value) => {\r\n        setValute(value);\r\n    };\r\n\r\n    const onChangeHandler = (ev) => {\r\n        if (ev.currentTarget.name === \"usdt\") {\r\n            setValue(ev.currentTarget.name, ev.currentTarget.value + valute);\r\n        } else {\r\n            setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        fetchData(data);\r\n    };\r\n\r\n    const showCashError = () => {\r\n        switch (errors.sum && errors.sum.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше\";\r\n            case \"required\":\r\n                return \"Поле сумма пополнения обязательна\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const showCardNumberError = () => {\r\n        switch (errors.card_number && errors.card_number.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше\";\r\n            case \"required\":\r\n                return \"Поле номер кошелька обязательна\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>TRC20</span>\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <div className=\"form__cash_fields\">\r\n                    <Field\r\n                        label=\"Сумма вывода\"\r\n                        type=\"money\"\r\n                        {...register(\"sum\", {\r\n                            required: true,\r\n                            minLength: 2,\r\n                            maxLength: 100,\r\n                        })}\r\n                        error={errors.sum && showCashError()}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                    <Field\r\n                        label=\"Номер кошелька\"\r\n                        {...register(\"card_number\", {\r\n                            required: true,\r\n                            minLength: 2,\r\n                            maxLength: 100,\r\n                        })}\r\n                        error={errors.card_number && showCardNumberError()}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                >\r\n                    {loaded ? (\r\n                        <SpinnerLoad />\r\n                    ) : (\r\n                        <>\r\n                            <svg\r\n                                width=\"24\"\r\n                                height=\"25\"\r\n                                viewBox=\"0 0 24 25\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    opacity=\"1\"\r\n                                    d=\"M10.9219 15.0781C11.4844 15.6875 12.4688 15.6875 13.0312 15.0781L17.5312 10.5781C18.1406 10.0156 18.1406 9.03125 17.5312 8.46875C16.9688 7.85938 15.9844 7.85938 15.4219 8.46875L13.5 10.3906V2C13.5 1.20312 12.7969 0.5 12 0.5C11.1562 0.5 10.5 1.20312 10.5 2V10.3906L8.53125 8.46875C8.25 8.1875 7.875 8 7.5 8C7.07812 8 6.70312 8.1875 6.42188 8.46875C5.8125 9.03125 5.8125 10.0156 6.42188 10.5781L10.9219 15.0781ZM22.5 15.5H18L16.5 18.5H7.5L6 15.5H1.5C0.65625 15.5 0 16.2031 0 17V22.25C0 23.5156 0.984375 24.5 2.25 24.5H21.75C22.9688 24.5 24 23.5156 24 22.25V17C24 16.2031 23.2969 15.5 22.5 15.5Z\"\r\n                                    fill=\"white\"\r\n                                />\r\n                            </svg>\r\n\r\n                            <span>Вывести баланс</span>\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CashForm;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Icons\r\nimport logo from \"@assets/img/logo.svg\";\r\nimport key from \"@assets/img/keyactive.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Checkbox from \"../../Checkbox\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\n\r\n//Router\r\nimport { router } from \"@utils/router\";\r\n\r\nconst ResetPasswordForm = ({ fetchData }) => {\r\n    const navigate = useNavigate();\r\n    const [loaded, setLoaded] = useState(true);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        setLoaded(false);\r\n\r\n        fetchData(data);\r\n\r\n        setLoaded(true);\r\n    };\r\n\r\n    const showEmailError = () => {\r\n        switch (errors.email && errors.email.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const showPasswordError = () => {\r\n        switch (errors.password && errors.password.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>НОВЫЙ ПАРОЛЬ</span>\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"form__desc\">\r\n                <p>\r\n                    Если вы забыли свой пароль - то его можно восстановить,\r\n                    указав свой Email, на который мы вышлем ссылку с\r\n                    восстановлением пароля.\r\n                </p>\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Field\r\n                    label=\"Email\"\r\n                    {...register(\"email\", { required: true, maxLength: 50 })}\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.email && (\r\n                    <span className=\"form__error\">{showEmailError()}</span>\r\n                )}\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                >\r\n                    <img src={key} alt=\"key\" />\r\n                    {!loaded ? <SpinnerLoad /> : \"ВОССТАНОВИТЬ ПАРОЛЬ\"}\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Icons\r\nimport logo from \"@assets/img/logo.svg\";\r\nimport key from \"@assets/img/keyactive.svg\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Checkbox from \"../../Checkbox\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\n\r\n//Router\r\nimport { router } from \"@utils/router\";\r\n\r\nconst NewPassword = ({ fetchData }) => {\r\n    const navigate = useNavigate();\r\n    const [loaded, setLoaded] = useState(true);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        setValue,\r\n    } = useForm();\r\n\r\n    const onChangeHandler = (ev) => {\r\n        setValue(ev.currentTarget.name, ev.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitHandler = async (data) => {\r\n        setLoaded(false);\r\n\r\n        if (data.pass1 === data.pass2) {\r\n            fetchData(data);\r\n        }\r\n\r\n        setLoaded(true);\r\n    };\r\n\r\n    const showPassword1Error = () => {\r\n        switch (errors.pass1 && errors.pass1.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const showPassword2Error = () => {\r\n        switch (errors.pass2 && errors.pass2.type) {\r\n            case \"minLength\":\r\n                return \"Введите больше 1 символа\";\r\n            case \"maxLength\":\r\n                return \"Введите меньше 50 символов\";\r\n            case \"required\":\r\n                return \"Поле обязательно\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>НОВЫЙ ПАРОЛЬ</span>\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"form__desc\">\r\n                <p>\r\n                    Для того чтобы войти в следующий раз под новым паролем, вам\r\n                    нужно ввести новый пароль и подтвердить его повторным\r\n                    вводом.\r\n                </p>\r\n            </div>\r\n            <form\r\n                onSubmit={handleSubmit(onSubmitHandler)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Field\r\n                    label=\"Пароль\"\r\n                    {...register(\"pass1\", {\r\n                        required: true,\r\n                        minLength: 8,\r\n                        maxLength: 50,\r\n                    })}\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.email && (\r\n                    <span className=\"form__error\">{showPassword1Error()}</span>\r\n                )}\r\n                <Field\r\n                    label=\"Повторите пароль\"\r\n                    {...register(\"pass2\", {\r\n                        required: true,\r\n                        minLength: 8,\r\n                        maxLength: 50,\r\n                    })}\r\n                    onChange={onChangeHandler}\r\n                />\r\n                {errors.email && (\r\n                    <span className=\"form__error\">{showPassword2Error()}</span>\r\n                )}\r\n                <Button\r\n                    className=\"form__button\"\r\n                    theme={\"beforesubmit\"}\r\n                    type=\"submit\"\r\n                >\r\n                    <img src={key} alt=\"key\" />\r\n                    {!loaded ? <SpinnerLoad /> : \"ВОССТАНОВИТЬ ПАРОЛЬ\"}\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPassword;\r\n","import React, { useState } from \"react\";\r\n\r\n//Form\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Field\r\nimport Field from \"@components/Field\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport SpinnerLoad from \"@components/SpinnerLoad\";\r\nimport Select from \"@components/Select\";\r\n\r\n//Styles\r\nimport \"../Forms.scss\";\r\n\r\nconst ActivationForm = ({ fetchData }) => {\r\n    const [loaded, setLoaded] = useState(true);\r\n\r\n    const handleClick = () => {\r\n        fetchData();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form__title\">\r\n                <span>Активация аккаунта</span>\r\n            </div>\r\n            <Button\r\n                onClick={handleClick}\r\n                className=\"form__button\"\r\n                theme={\"beforesubmit\"}\r\n            >\r\n                {!loaded ? <SpinnerLoad /> : <span>Активировать</span>}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivationForm;\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst AgreeModal = React.memo(({ handleChange }) => {\r\n    const [check, setCheck] = useState(false);\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Вы действиетльно хотите продолжить?</span>\r\n                </div>\r\n                <div className=\"modal__block__desc\">\r\n                    <span>\r\n                        Нажимая на кнопку ниже, я принимаю условия\r\n                        пользовательсвого соглашения\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal__block__confirm\">\r\n                    <Checkbox\r\n                        checked={check}\r\n                        // onClick={() => setCheck(!check)}\r\n                        onChange={(e) => setCheck(e.target.checked)}\r\n                        id=\"register_confirm_agree\"\r\n                        group=\"register_confirm_agree\"\r\n                        label={`Я принимаю условия`}\r\n                    />\r\n                    <a href=\"#\">соглашения</a>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        disabled={!check}\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AgreeModal;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//Icons\r\nimport arrow from \"@assets/img/selectArrow.svg\";\r\n\r\n//Styles\r\nimport \"./Select.scss\";\r\n\r\nconst Select = ({ children, className, defaultOption, onChange }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [select, setSelect] = useState(defaultOption);\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n        if (e.target.localName === \"li\") {\r\n            setSelect(e.target.innerText);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        onChange && onChange(select);\r\n    }, [select]);\r\n\r\n    const toggleSelect = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={`select ${className}`} onClick={toggleSelect}>\r\n            <span>{select}</span>\r\n            {open && <ul className=\"select__list\">{children}</ul>}\r\n            <img src={arrow} alt=\"arrow\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","export const emailRegEx =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const startDateRegEx = /^(0001).*$/;\r\n\r\nexport const phoneRegEx =\r\n    /^((8|\\+[0-79])[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\r\nexport const nameRegEx = /^[A-ZА-ЯЁ][a-zа-яё]+$/;\r\n\r\nexport const passwordRegEx = /^([^\\s])*$/;\r\n","import { useState } from \"react\";\r\nimport { emailRegEx, nameRegEx, passwordRegEx, phoneRegEx } from \"@utils/regex\";\r\nimport { checkIfFirstLetterInLowerCase } from \"@utils/stringHelper\";\r\n\r\nexport const useValidator = () => {\r\n    const [errorData, setErrorData] = useState({\r\n        fields: {\r\n            email: false,\r\n            password: false,\r\n            password_confirm: false,\r\n            phone: false,\r\n            firstName: false,\r\n            secondName: false,\r\n        },\r\n        error: \"\",\r\n    });\r\n\r\n    const setErrorFor = (errorField, valid, errorMsg) => {\r\n        setErrorData((prev) => {\r\n            return {\r\n                fields: { ...prev.fields, [errorField]: !valid },\r\n                error: errorMsg,\r\n            };\r\n        });\r\n    };\r\n\r\n    const isValid = (what, regex, errorField, errorMsg) => {\r\n        let valid = false;\r\n\r\n        if (regex.test(what)) {\r\n            errorMsg = \"\";\r\n            valid = true;\r\n        } else {\r\n            valid = false;\r\n        }\r\n\r\n        setErrorFor(errorField, valid, errorMsg);\r\n\r\n        return valid;\r\n    };\r\n\r\n    const isEmailValid = (email) => {\r\n        if (!email) {\r\n            setErrorFor(\"email\", false, \"Поле Email обязательна\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            email,\r\n            emailRegEx,\r\n            \"email\",\r\n            \"Напишите корректно: example@gmail.com\"\r\n        );\r\n    };\r\n\r\n    const isPhoneValid = (phone) => {\r\n        return isValid(phone, phoneRegEx, \"phone\", \"Поле Телефон необходимо\");\r\n    };\r\n\r\n    const isFirstNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\"firstName\", false, \"Имя должно быть с большой буквы\");\r\n            return;\r\n        }\r\n\r\n        return isValid(name, nameRegEx, \"firstName\", \"Поле имя необходимо\");\r\n    };\r\n\r\n    const isSecondNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\r\n                \"secondName\",\r\n                false,\r\n                \"Фамилия должна быть с большой буквы\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            name,\r\n            nameRegEx,\r\n            \"secondName\",\r\n            \"Поле Фамилия обязательна\"\r\n        );\r\n    };\r\n\r\n    const isPasswordValid = (password, length) => {\r\n        if (password.length < length) {\r\n            setErrorFor(\"password\", false, \"Слишком короткий пароль\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const isPasswordConfirmValid = (password, length, confirm_password) => {\r\n        if (confirm_password.length < length && confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        if (confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password_confirm\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const setError = (error) => {\r\n        setErrorData((prev) => ({ ...prev, error: error }));\r\n    };\r\n\r\n    const hasInvalidFields = () => {\r\n        return Object.values(errorData.fields).find((f) => f);\r\n    };\r\n\r\n    return {\r\n        isEmailValid,\r\n        errorData,\r\n        setErrorData,\r\n        setError,\r\n        isPhoneValid,\r\n        isFirstNameValid,\r\n        isSecondNameValid,\r\n        isPasswordValid,\r\n        hasInvalidFields,\r\n        isPasswordConfirmValid,\r\n    };\r\n};\r\n"],"names":["id","group","label","value","onClick","props","className","type","name","for","fetchData","error","loaded","navigate","useNavigate","useState","useForm","register","handleSubmit","errors","formState","setValue","onChangeHandler","ev","currentTarget","onSubmitHandler","data","src","logo","alt","onSubmit","noValidate","autoComplete","Field","required","maxLength","onChange","email","showEmailError","password","showPasswordError","to","router","Button","theme","disabled","key","SpinnerLoad","checked","class","setEmail","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","secondName","setSecondName","confirm","setConfirm","role","setRole","phone","setPhone","agree","setAgree","useValidator","setError","errorData","fields","validator","useSelector","state","user","messages","handleRole","toggle","btnRef","useRef","registerHandler","e","preventDefault","isPhoneValid","isEmailValid","isFirstNameValid","isSecondNameValid","isPasswordValid","isPasswordConfirmValid","first_name","last_name","phone_number","is_trader","classNames","target","password_confirm","Checkbox","href","hasInvalidFields","ref","AgreeModal","handleChange","setLoaded","minLength","cash","showCashError","width","height","viewBox","xmlns","opacity","d","fill","dispatch","useDispatch","complateText","setComplate","pay","usdt_for_pay","message","complete","ustdDeposit","tx_id","usdt","useEffect","ustdPayment","address","ustdConfirm","valute","sum","card_number","showCardNumberError","pass1","pass2","showPassword1Error","showPassword2Error","React","check","setCheck","children","defaultOption","open","setOpen","select","setSelect","document","addEventListener","localName","innerText","arrow","emailRegEx","phoneRegEx","nameRegEx","passwordRegEx","setErrorData","setErrorFor","errorField","valid","errorMsg","prev","isValid","what","regex","test","checkIfFirstLetterInLowerCase","length","Object","values","find","f","confirm_password"],"sourceRoot":""}
{"version":3,"file":"static/js/897.9c96651c.chunk.js","mappings":"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","sources":["assets/img/userlogo.svg","components/CardInfo/index.js","components/Checkbox/index.js","components/Modals/AgreeModal.js","components/Modals/CopyTradeModal.js","components/Modals/FreePlaceModal.js","components/RangeSlider/index.js","components/UI/InfoBlock/index.js","utils/regex.js","hooks/useValidator.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserlogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 15,\n    viewBox: \"0 0 13 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.5 7.25C8.41406 7.25 10 5.69141 10 3.75C10 1.83594 8.41406 0.25 6.5 0.25C4.55859 0.25 3 1.83594 3 3.75C3 5.69141 4.55859 7.25 6.5 7.25ZM7.86719 8.5625H5.10547C2.48047 8.5625 0.375 10.6953 0.375 13.3203C0.375 13.8398 0.785156 14.25 1.30469 14.25H11.668C12.1875 14.25 12.625 13.8398 12.625 13.3203C12.625 10.6953 10.4922 8.5625 7.86719 8.5625Z\",\n    fill: \"#A8DC66\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserlogo);\nexport default __webpack_public_path__ + \"static/media/userlogo.824f9db4facee2f37f1ae20ad3143292.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\n//Icons\r\nimport userlogo from \"@assets/img/userlogo.svg\";\r\n\r\n//Styles\r\nimport \"./CardInfo.scss\";\r\nimport UserInfoBlock from \"../UI/UserInfoBlock\";\r\n\r\nconst CardInfo = ({\r\n    children,\r\n    name,\r\n    email,\r\n    rating,\r\n    result = \"\",\r\n    logo,\r\n    className,\r\n    onClick,\r\n    end = false,\r\n    id,\r\n}) => {\r\n    return (\r\n        <div className={`cardinfo ${className}`}>\r\n            {end && (\r\n                <div className={`cardinfo__status`}>\r\n                    <span>Группа заполнена</span>\r\n                </div>\r\n            )}\r\n            <div className=\"cardinfo__header\">\r\n                <UserInfoBlock\r\n                    name={name}\r\n                    email={email}\r\n                    logo={logo}\r\n                    onClick={onClick}\r\n                    id={id}\r\n                />\r\n                {rating ? (\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div className=\"cardinfo__header__rating\">\r\n                            <img src={userlogo} alt=\"userlogo\" />\r\n                            <span>{rating}</span>\r\n                        </div>\r\n                        {result && (\r\n                            <div className=\"cardinfo__header__rating\">\r\n                                <span>+ {result} %</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div\r\n                className={`cardinfo__content ${\r\n                    className && className + \"__content\"\r\n                }`}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardInfo;\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./Checkbox.scss\";\r\n\r\nconst Checkbox = ({ id, group, value, label, onClick, ...props }) => {\r\n    return (\r\n        <div className=\"custom_checkbox\" onClick={onClick}>\r\n            <input type=\"checkbox\" id={id} name={group} {...props} />\r\n            <label for={id}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst AgreeModal = React.memo(({ handleChange }) => {\r\n    const [check, setCheck] = useState(false);\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Вы действиетльно хотите продолжить?</span>\r\n                </div>\r\n                <div className=\"modal__block__desc\">\r\n                    <span>\r\n                        Нажимая на кнопку ниже, я принимаю условия\r\n                        пользовательсвого соглашения\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal__block__confirm\">\r\n                    <Checkbox\r\n                        checked={check}\r\n                        // onClick={() => setCheck(!check)}\r\n                        onChange={(e) => setCheck(e.target.checked)}\r\n                        id=\"register_confirm_agree\"\r\n                        group=\"register_confirm_agree\"\r\n                        label={`Я принимаю условия`}\r\n                    />\r\n                    <a href=\"#\">соглашения</a>\r\n                </div>\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        disabled={!check}\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(true)}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AgreeModal;\r\n","import React, { useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport CardInfo from \"../CardInfo\";\r\nimport InfoBlock from \"@components/UI/InfoBlock\";\r\nimport RangeSlider from \"@components/RangeSlider\";\r\nimport Checkbox from \"@components/Checkbox\";\r\n\r\n//Icons\r\nimport balance from \"@assets/img/balance.svg\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport router from \"../../utils/router\";\r\nimport AgreeModal from \"./AgreeModal\";\r\n\r\nexport const PareButton = () => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <Button\r\n            theme={active ? \"beforesubmit\" : \"aftersubmit\"}\r\n            onClick={() => setActive(!active)}\r\n        >\r\n            <img src={balance} alt=\"\" />\r\n            <span>USDTETH</span>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst CopyTradeModal = ({ handleChange, info }) => {\r\n    const [pareChange, setPareChange] = useState(0);\r\n    const [check, setCheck] = useState(false);\r\n    const [modalTab, setModalTab] = useState(false);\r\n    const navigate = useNavigate();\r\n    const { isAuth } = useSelector((state) => state.auth);\r\n\r\n    const hadnleClick = (toggle) => {\r\n        if (toggle) {\r\n            console.log(toggle);\r\n        } else {\r\n            handleChange(0);\r\n        }\r\n    };\r\n\r\n    const rangeChange = (length) => {\r\n        console.log(length);\r\n    };\r\n\r\n    console.log(check);\r\n\r\n    return (\r\n        <>\r\n            {!modalTab && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal__block\">\r\n                        <div className=\"modal__block__title\">\r\n                            <span>Копирование трейдера</span>\r\n                        </div>\r\n                        <div className=\"modal__block__desc opacity\">\r\n                            <span>\r\n                                Вы можете выбрать пары и указать свою сумму,\r\n                                которую будете копировать.\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <CardInfo\r\n                            className=\"modal__block__profit\"\r\n                            name={\"Богдан Богданов\"}\r\n                            email={\"danghoang87hl@gmail.com\"}\r\n                            rating={\"50/50\"}\r\n                            logo=\"https://cdn.dribbble.com/users/24078/screenshots/15522433/media/e92e58ec9d338a234945ae3d3ffd5be3.jpg?compress=1&resize=400x300\"\r\n                        >\r\n                            <InfoBlock\r\n                                label={\"Уровень ROI\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                color=\"green\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label={\"Профит\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                color=\"green\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                            <InfoBlock\r\n                                label={\"Уровень MDD\"}\r\n                                value=\"+ 23.31 %\"\r\n                                fontSize=\"12\"\r\n                                vWeigth=\"700\"\r\n                                opactityLabel\r\n                            />\r\n                        </CardInfo>\r\n                        <div className=\"modal__block__line\"></div>\r\n                        <span className=\"w700 f12\">Пары</span>\r\n                        <div className=\"modal__block__pare\">\r\n                            {Array.from({ length: 3 }).map((e, idx) => (\r\n                                <PareButton key={idx + 1} />\r\n                            ))}\r\n                        </div>\r\n                        {/* <Button>ПОКАЗАТЬ ВСЕ</Button> */}\r\n                        <span className=\"w700 f12\">ВАША СУММА КОПИРОВАНИЯ</span>\r\n                        <RangeSlider\r\n                            min={0}\r\n                            max={500}\r\n                            onChange={(e) => rangeChange(e)}\r\n                        />\r\n                        <div className=\"modal__block__confirm\">\r\n                            <Checkbox\r\n                                id={info}\r\n                                checked={check}\r\n                                onChange={(e) => setCheck(e.target.checked)}\r\n                                label=\"Я принимаю условия\"\r\n                            />\r\n                            <a href=\"#\" onClick={() => setModalTab(true)}>\r\n                                соглашения\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"modal__block__btns\">\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme=\"aftersubmit\"\r\n                                onClick={() => hadnleClick(false)}\r\n                            >\r\n                                Отмена\r\n                            </Button>\r\n                            <Button\r\n                                className=\"modal__block__btns__button\"\r\n                                theme=\"beforesubmit\"\r\n                                onClick={() => {\r\n                                    if (isAuth) {\r\n                                        hadnleClick(false);\r\n                                    } else {\r\n                                        navigate(router.login);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Копировать\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {modalTab && (\r\n                <AgreeModal\r\n                    handleChange={(toggle) => {\r\n                        setCheck(toggle);\r\n                        setModalTab(false);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CopyTradeModal;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Field from \"@components/Field\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { emailRegEx } from \"../../utils/regex\";\r\nimport { useValidator } from \"../../hooks/useValidator\";\r\n\r\nconst FreePlaceModal = ({ handleChange }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const {\r\n        setError,\r\n        errorData: { fields, error },\r\n        ...validator\r\n    } = useValidator();\r\n\r\n    const onSubmit = (data) => {\r\n        alert(JSON.stringify(data));\r\n    };\r\n\r\n    const hadnleClick = (toggle) => {\r\n        handleChange(toggle);\r\n    };\r\n\r\n    let btnRef = useRef([]);\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validator.isEmailValid(email)) {\r\n            return;\r\n        }\r\n\r\n        console.log(email);\r\n        handleChange(true);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => registerHandler(e)}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            className=\"modal\"\r\n        >\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Уведомить о свободном месте</span>\r\n                </div>\r\n                <div className=\"modal__block__desc\">\r\n                    <span>\r\n                        Введите свой Email чтобы мы могли уведомить вас о\r\n                        появлении свободного места в этой группе.\r\n                    </span>\r\n                </div>\r\n                <Field\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    classNames={`${fields.email && \"error\"}`}\r\n                    onChange={(e) => {\r\n                        validator.isEmailValid(e.target.value);\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                    error={fields.email && error}\r\n                />\r\n\r\n                <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={() => hadnleClick(false)}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                    <Button\r\n                        disabled={validator.hasInvalidFields()}\r\n                        ref={btnRef}\r\n                        className=\"modal__block__btns__button\"\r\n                        theme=\"beforesubmit\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Уведомить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FreePlaceModal;\r\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\n\r\n//Styles\r\nimport \"./RangeSlider.scss\";\r\n\r\nconst RangeSlider = ({ min, max, onChange }) => {\r\n    const [minVal, setMinVal] = useState(min);\r\n    const [maxVal, setMaxVal] = useState(max);\r\n    const minValRef = useRef(min);\r\n\r\n    useEffect(() => {\r\n        onChange(minVal);\r\n    }, [minVal, maxVal, onChange]);\r\n\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={minVal}\r\n                onChange={(event) => {\r\n                    const value = Math.min(Number(event.target.value), maxVal);\r\n                    setMinVal(value);\r\n                    minValRef.current = value;\r\n                }}\r\n                className=\"thumb thumb--left\"\r\n                //@ts-ignore\r\n                style={{ zIndex: minVal > max - 100 && \"5\" }}\r\n            />\r\n\r\n            <div className=\"slider\">\r\n                <div className=\"slider__values\">\r\n                    <span>{minVal}</span>\r\n                    <span>{maxVal} USD</span>\r\n                </div>\r\n                <div className=\"slider__track\" />\r\n                <div className=\"slider__range\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from \"react\";\r\nimport { dateFormatter } from \"../../../utils/stringHelper\";\r\n\r\n//Styles\r\nimport \"./InfoBlock.scss\";\r\n\r\nconst InfoBlock = ({\r\n    label,\r\n    value,\r\n    opactityLabel = false,\r\n    opactityValue = false,\r\n    color = \"\",\r\n    lWeigth = \"400\",\r\n    vWeigth = \"400\",\r\n    fontSize = \"14\",\r\n    date = false,\r\n}) => {\r\n    return (\r\n        <div className={`infoblock ${fontSize && \"f\" + fontSize}`}>\r\n            <div\r\n                className={`infoblock__label ${lWeigth && \"w\" + lWeigth} ${\r\n                    opactityLabel ? \"opacity\" : \"\"\r\n                }`}\r\n            >\r\n                <span>{label}</span>\r\n            </div>\r\n            <div\r\n                className={`infoblock__value ${color} ${\r\n                    vWeigth && \"w\" + vWeigth\r\n                } ${opactityValue ? \"opacity\" : \"\"}`}\r\n            >\r\n                <span>{date ? dateFormatter(new Date(value)) : value}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBlock;\r\n","export const emailRegEx =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const startDateRegEx = /^(0001).*$/;\r\n\r\nexport const phoneRegEx =\r\n    /^((8|\\+[0-79])[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\r\nexport const nameRegEx = /^[A-ZА-ЯЁ][a-zа-яё]+$/;\r\n\r\nexport const passwordRegEx = /^([^\\s])*$/;\r\n","import { useState } from \"react\";\r\nimport { emailRegEx, nameRegEx, passwordRegEx, phoneRegEx } from \"@utils/regex\";\r\nimport { checkIfFirstLetterInLowerCase } from \"@utils/stringHelper\";\r\n\r\nexport const useValidator = () => {\r\n    const [errorData, setErrorData] = useState({\r\n        fields: {\r\n            email: false,\r\n            password: false,\r\n            password_confirm: false,\r\n            phone: false,\r\n            firstName: false,\r\n            secondName: false,\r\n        },\r\n        error: \"\",\r\n    });\r\n\r\n    const setErrorFor = (errorField, valid, errorMsg) => {\r\n        setErrorData((prev) => {\r\n            return {\r\n                fields: { ...prev.fields, [errorField]: !valid },\r\n                error: errorMsg,\r\n            };\r\n        });\r\n    };\r\n\r\n    const isValid = (what, regex, errorField, errorMsg) => {\r\n        let valid = false;\r\n\r\n        if (regex.test(what)) {\r\n            errorMsg = \"\";\r\n            valid = true;\r\n        } else {\r\n            valid = false;\r\n        }\r\n\r\n        setErrorFor(errorField, valid, errorMsg);\r\n\r\n        return valid;\r\n    };\r\n\r\n    const isEmailValid = (email) => {\r\n        if (!email) {\r\n            setErrorFor(\"email\", false, \"Поле Email обязательна\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            email,\r\n            emailRegEx,\r\n            \"email\",\r\n            \"Напишите корректно: example@gmail.com\"\r\n        );\r\n    };\r\n\r\n    const isPhoneValid = (phone) => {\r\n        return isValid(phone, phoneRegEx, \"phone\", \"Поле Телефон необходимо\");\r\n    };\r\n\r\n    const isFirstNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\"firstName\", false, \"Имя должно быть с большой буквы\");\r\n            return;\r\n        }\r\n\r\n        return isValid(name, nameRegEx, \"firstName\", \"Поле имя необходимо\");\r\n    };\r\n\r\n    const isSecondNameValid = (name) => {\r\n        if (checkIfFirstLetterInLowerCase(name)) {\r\n            setErrorFor(\r\n                \"secondName\",\r\n                false,\r\n                \"Фамилия должна быть с большой буквы\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            name,\r\n            nameRegEx,\r\n            \"secondName\",\r\n            \"Поле Фамилия обязательна\"\r\n        );\r\n    };\r\n\r\n    const isPasswordValid = (password, length) => {\r\n        if (password.length < length) {\r\n            setErrorFor(\"password\", false, \"Слишком короткий пароль\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const isPasswordConfirmValid = (password, length, confirm_password) => {\r\n        if (confirm_password.length < length && confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        if (confirm_password !== password) {\r\n            setErrorFor(\"password_confirm\", false, \"Пароли не схожи\");\r\n            return;\r\n        }\r\n\r\n        return isValid(\r\n            password,\r\n            passwordRegEx,\r\n            \"password_confirm\",\r\n            \"Поле пароль необходимо\"\r\n        );\r\n    };\r\n\r\n    const setError = (error) => {\r\n        setErrorData((prev) => ({ ...prev, error: error }));\r\n    };\r\n\r\n    const hasInvalidFields = () => {\r\n        return Object.values(errorData.fields).find((f) => f);\r\n    };\r\n\r\n    return {\r\n        isEmailValid,\r\n        errorData,\r\n        setErrorData,\r\n        setError,\r\n        isPhoneValid,\r\n        isFirstNameValid,\r\n        isSecondNameValid,\r\n        isPasswordValid,\r\n        hasInvalidFields,\r\n        isPasswordConfirmValid,\r\n    };\r\n};\r\n"],"names":["children","name","email","rating","result","logo","className","onClick","end","id","UserInfoBlock","style","display","flexDirection","alignItems","justifyContent","src","userlogo","alt","group","label","value","props","type","for","AgreeModal","React","handleChange","useState","check","setCheck","checked","onChange","e","target","href","disabled","theme","PareButton","active","setActive","balance","info","modalTab","setModalTab","navigate","useNavigate","isAuth","useSelector","state","auth","hadnleClick","toggle","console","log","fontSize","color","vWeigth","opactityLabel","Array","from","length","map","idx","min","max","router","setEmail","useValidator","setError","errorData","fields","error","validator","btnRef","useRef","registerHandler","preventDefault","isEmailValid","onSubmit","noValidate","autoComplete","classNames","hasInvalidFields","ref","minVal","setMinVal","maxVal","minValRef","useEffect","event","Math","Number","current","zIndex","opactityValue","lWeigth","date","dateFormatter","Date","emailRegEx","phoneRegEx","nameRegEx","passwordRegEx","password","password_confirm","phone","firstName","secondName","setErrorData","setErrorFor","errorField","valid","errorMsg","prev","isValid","what","regex","test","isPhoneValid","isFirstNameValid","checkIfFirstLetterInLowerCase","isSecondNameValid","isPasswordValid","Object","values","find","f","isPasswordConfirmValid","confirm_password"],"sourceRoot":""}
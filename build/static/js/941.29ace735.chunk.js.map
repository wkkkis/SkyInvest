{"version":3,"file":"static/js/941.29ace735.chunk.js","mappings":"mMAkEA,IAxDkB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,WAAS,GAA/B,eAAOG,EAAP,KAAYC,EAAZ,KAkBA,OARAC,EAAAA,EAAAA,YAAU,WACc,IAAhBJ,EAAKK,OACLP,EAAaE,GAEbG,GAAO,KAEZ,CAACH,KAGA,gBAAKM,UAAU,QAAf,UACI,iBAAKA,UAAU,eAAf,WACI,gBAAKA,UAAU,sBAAf,UACI,sHAEJ,gBAAKA,UAAU,wBAAf,UACI,SAAC,IAAD,CACIC,KAAK,SACLC,OAAQ,EACRC,SAAU,SAACC,GACHV,GACAG,GAAO,GAGXF,EAAQS,QAInBR,GACG,iBAAMI,UAAU,cAAhB,gHACA,Y,oLCiDpB,EAtFa,WACT,OAA0BP,EAAAA,EAAAA,WAAS,GAAnC,eAAOY,EAAP,KAAcC,EAAd,KACA,GAAwBb,EAAAA,EAAAA,UAAS,IAAjC,eAAOc,EAAP,KAAaC,EAAb,KACA,GAAwBf,EAAAA,EAAAA,UAAS,IAAjC,eAAaE,GAAb,WAEMc,GAAWC,EAAAA,EAAAA,MAETC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAA3CH,UACR,GAAsCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAME,OAA3DC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,UAczBpB,EAAAA,EAAAA,YAAU,WACNqB,OAAOC,OAAOJ,GAASK,SAAQ,SAACjB,GACf,uFAATA,EAAE,IACFE,GAAS,QAGlB,CAACU,IAcJ,OACI,iBAAKhB,UAAU,OAAf,WACI,gBAAKA,UAAU,eAAf,UACI,iBAAKA,UAAU,sBAAf,WACI,SAAC,KAAD,CACIsB,GACIX,EACMY,EAAAA,EAAAA,aACAA,EAAAA,EAAAA,cAJd,UAOI,gBAAKvB,UAAU,iCAEnB,gBACIwB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,iBACIC,QAAQ,MACRC,EAAE,6lBACFH,KAAK,eAIb,mEAGR,gBAAK3B,UAAU,qBAAf,UACI,SAAC,KAAD,CAAU+B,UA3CJ,SAACxB,GACfC,EAAQ,CACJwB,IAAKzB,EAAKyB,IACVC,YAAa1B,EAAK0B,cAEtB,IAAMC,EAAM,CACRC,OAAQ5B,EAAKyB,IACbI,QAAS7B,EAAK0B,aAElBxB,GAAS4B,EAAAA,EAAAA,IAAQH,KAkCuBjB,OAAQA,MAE3CD,EACKG,OAAOC,OAAOJ,GAASsB,KAAI,SAAClC,GAAD,OACvB,SAACmC,EAAA,EAAD,CAAYvB,QAASZ,EAAGC,OAAO,OAEnC,KACLa,GAAW,SAACqB,EAAA,EAAD,CAAYvB,QAASE,EAAUb,OAAO,IAAY,KAC7DA,IAAS,SAACmC,EAAA,EAAD,CAAWhD,aAvEX,SAACiD,GACf9C,EAAQ8C,GACR,IAAMP,EAAM,CACRC,OAAQ5B,EAAKyB,IACbI,QAAS7B,EAAK0B,YACdS,WAAYD,GAEhBnC,GAAS,GACTG,GAAS4B,EAAAA,EAAAA,IAAQH,IACjB5B,EAAS","sources":["components/Modals/TwoFACode.js","pages/Cash/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport Button from \"@components/Button\";\r\nimport Checkbox from \"../Checkbox\";\r\nimport ReactCodeInput from \"react-code-input\";\r\n\r\n//Styles\r\nimport \"./Modal.scss\";\r\n\r\nconst TwoFACode = ({ handleChange }) => {\r\n    const [code, setCode] = useState(\"\");\r\n    const [err, setErr] = useState(false);\r\n\r\n    const hadnleClick = () => {\r\n        if (code) {\r\n            handleChange(code);\r\n        } else {\r\n            setErr(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (code.length === 6) {\r\n            handleChange(code);\r\n        } else {\r\n            setErr(true);\r\n        }\r\n    }, [code]);\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__block\">\r\n                <div className=\"modal__block__title\">\r\n                    <span>Введите код Google Authentificator</span>\r\n                </div>\r\n                <div className=\"modal__block__content\">\r\n                    <ReactCodeInput\r\n                        type=\"number\"\r\n                        fields={6}\r\n                        onChange={(e) => {\r\n                            if (code) {\r\n                                setErr(false);\r\n                            }\r\n\r\n                            setCode(e);\r\n                        }}\r\n                    />\r\n                </div>\r\n                {err ? (\r\n                    <span className=\"form__error\">Заполните все поля</span>\r\n                ) : null}\r\n                {/* <div className=\"modal__block__btns\">\r\n                    <Button\r\n                        className=\"modal__block__bts_button\"\r\n                        theme=\"aftersubmit\"\r\n                        onClick={hadnleClick}\r\n                    >\r\n                        Продолжить\r\n                    </Button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TwoFACode;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport { CashForm } from \"@components/Forms\";\r\n\r\n//Styles\r\nimport \"./Cash.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport router from \"../../utils/router\";\r\nimport TwoFACode from \"../../components/Modals/TwoFACode\";\r\nimport { cashUsd } from \"../../store/payment/pay.api\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\n\r\nconst Cash = () => {\r\n    const [error, setError] = useState(false);\r\n    const [data, setData] = useState(\"\");\r\n    const [code, setCode] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { isTraider } = useSelector((state) => state.user);\r\n    const { message, loaded, complete } = useSelector((state) => state.pay);\r\n\r\n    const handleOtp = (token) => {\r\n        setCode(token);\r\n        const obj = {\r\n            amount: data.sum,\r\n            address: data.card_number,\r\n            two_fa_otp: token,\r\n        };\r\n        setError(false);\r\n        dispatch(cashUsd(obj));\r\n        setError(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        Object.values(message).forEach((e) => {\r\n            if (e[0] === \"Введите код Google authenticator\") {\r\n                setError(true);\r\n            }\r\n        });\r\n    }, [message]);\r\n\r\n    const cashFetch = (data) => {\r\n        setData({\r\n            sum: data.sum,\r\n            card_number: data.card_number,\r\n        });\r\n        const obj = {\r\n            amount: data.sum,\r\n            address: data.card_number,\r\n        };\r\n        dispatch(cashUsd(obj));\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main__header\">\r\n                <div className=\"main__header__title\">\r\n                    <Link\r\n                        to={\r\n                            isTraider\r\n                                ? router.traider_page\r\n                                : router.investor_page\r\n                        }\r\n                    >\r\n                        <div className=\"main__header__title__back\"></div>\r\n                    </Link>\r\n                    <svg\r\n                        width=\"24\"\r\n                        height=\"25\"\r\n                        viewBox=\"0 0 24 25\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            opacity=\"0.8\"\r\n                            d=\"M22.5 15.5H18L16.5 18.5H7.5L6 15.5H1.5C0.65625 15.5 0 16.2031 0 17V22.25C0 23.5156 0.984375 24.5 2.25 24.5H21.75C22.9688 24.5 24 23.5156 24 22.25V17C24 16.2031 23.2969 15.5 22.5 15.5ZM8.53125 7.57812L10.5 5.65625V14C10.5 14.8438 11.1562 15.5 12 15.5C12.7969 15.5 13.5 14.8438 13.5 14V5.65625L15.4219 7.57812C15.7031 7.85938 16.0781 8 16.5 8C16.875 8 17.25 7.85938 17.5312 7.57812C18.1406 7.01562 18.1406 6.03125 17.5312 5.46875L13.0312 0.96875C12.4688 0.359375 11.4844 0.359375 10.9219 0.96875L6.42188 5.46875C5.8125 6.03125 5.8125 7.01562 6.42188 7.57812C6.98438 8.1875 7.96875 8.1875 8.53125 7.57812Z\"\r\n                            fill=\"#09090E\"\r\n                        />\r\n                    </svg>\r\n\r\n                    <span>Вывод</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"main__cash_content\">\r\n                <CashForm fetchData={cashFetch} loaded={loaded} />\r\n            </div>\r\n            {message\r\n                ? Object.values(message).map((e) => (\r\n                      <MessageBox message={e} error={true} />\r\n                  ))\r\n                : null}\r\n            {complete ? <MessageBox message={complete} error={false} /> : null}\r\n            {error && <TwoFACode handleChange={handleOtp} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cash;\r\n"],"names":["handleChange","useState","code","setCode","err","setErr","useEffect","length","className","type","fields","onChange","e","error","setError","data","setData","dispatch","useDispatch","isTraider","useSelector","state","user","pay","message","loaded","complete","Object","values","forEach","to","router","width","height","viewBox","fill","xmlns","opacity","d","fetchData","sum","card_number","obj","amount","address","cashUsd","map","MessageBox","TwoFACode","token","two_fa_otp"],"sourceRoot":""}